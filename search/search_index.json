{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Vertebrate Breed Ontology (VBO) The Vertebrate Breed Ontology (VBO) was created by the Monarch Initiative, in collaboration with the Online Mendelian Inheritance in Animals ( OMIA ), as a means of incorporating all breed names into a single computable resource. The first version of VBO was based on the Domestic Animal Diversity Information System (DAD-IS) breeds list created and maintained by the United Nations\u2019 Food and Agriculture Organization (FAO), and has been created using standard semantic engineering tools including the Ontology Development Kit (ODK). VBO serves as a single, computable resource for vertebrate breed names. It is used in databases such as OMIA and veterinarian health records to make non-human information more computable and consistent, therefore enhancing data interoperability. VBO is restricted to non-human vertebrate animal species. It covers breeds and breed populations for livestock, companion animals, and laboratory animals.","title":"Getting started"},{"location":"#the-vertebrate-breed-ontology-vbo","text":"The Vertebrate Breed Ontology (VBO) was created by the Monarch Initiative, in collaboration with the Online Mendelian Inheritance in Animals ( OMIA ), as a means of incorporating all breed names into a single computable resource. The first version of VBO was based on the Domestic Animal Diversity Information System (DAD-IS) breeds list created and maintained by the United Nations\u2019 Food and Agriculture Organization (FAO), and has been created using standard semantic engineering tools including the Ontology Development Kit (ODK). VBO serves as a single, computable resource for vertebrate breed names. It is used in databases such as OMIA and veterinarian health records to make non-human information more computable and consistent, therefore enhancing data interoperability. VBO is restricted to non-human vertebrate animal species. It covers breeds and breed populations for livestock, companion animals, and laboratory animals.","title":"The Vertebrate Breed Ontology (VBO)"},{"location":"FAQ/","text":"Frequently Asked Questions Documentation coming up General information about ontologies How to use GitHub to submit an issue How to use GitHub to create a PR How to open VBO in Protege","title":"FAQ"},{"location":"FAQ/#frequently-asked-questions","text":"Documentation coming up","title":"Frequently Asked Questions"},{"location":"FAQ/#general-information-about-ontologies","text":"","title":"General information about ontologies"},{"location":"FAQ/#how-to-use-github-to-submit-an-issue","text":"","title":"How to use GitHub to submit an issue"},{"location":"FAQ/#how-to-use-github-to-create-a-pr","text":"","title":"How to use GitHub to create a PR"},{"location":"FAQ/#how-to-open-vbo-in-protege","text":"","title":"How to open VBO in Protege"},{"location":"cite/","text":"How to cite VBO Use the following DOI to cite VBO: doi: https://doi.org/10.48550/arXiv.2406.02623","title":"Cite"},{"location":"cite/#how-to-cite-vbo","text":"Use the following DOI to cite VBO: doi: https://doi.org/10.48550/arXiv.2406.02623","title":"How to cite VBO"},{"location":"contributing/","text":"How to contribute to VBO We welcome any and all kinds of contributions, including: - requests for changes in VBO, including new breed record, record duplication, incorrect breed information, or non-existent breeds. - participation in discussions - documentation improvements Keep in touch The best way to be in touch with the VBO team is by creating an issue on our VBO GitHub repository: https://github.com/monarch-initiative/vertebrate-breed-ontology See how to create a GitHub issue here We also share information about upcoming events (e.g. workshops) and new VBO version releases via email. Please join the VBO mailing list: vbo-users+subconfirm@tislab.org Request changes in VBO VBO is an open, community-driven ontology. We rely on the community to report errors or improvement in VBO based on their knowledge, experience, and use cases. All requests should be made by submitting an issue in our issue tracker https://github.com/monarch-initiative/vertebrate-breed-ontology/issues. Everyone is welcome and encouraged to submit an issue: all that is required is a GitHub account, which can be created for free here . New term requests When a breed term cannot be found in VBO, one can submit a request to add it. A good term request includes: - the most common name for the breed (required ) - the species of the breed (required ) - any synonyms for the breed name - any publication (e.g. PMID), references, and/or databases supporting the information (required*) - the ORCID of the requester (so we can give you credit in the ontology) Please note that bulk submissions (i.e. requesting more than one term at a time) are welcome. The VBO team can guide you through the best way to submit these requests in a spreadsheet format. changes to an existing VBO term It is possible that some information that is currently in VBO needs to be updated. These changes can include adding new synonyms or new sources of information, merging duplicate records into a single one, or removing a record representing a breed that never existed. For these requests, please add as much information as you can in the GitHub issue. Please make sure to include: - the VBO ID of the existing term for which changes are requested - any publication (e.g. PMID), references, databases supporting your request - the ORCID of the requester (so we can give you credit in the ontology) Participate in the discussions We aim to make VBO development and maintenance a transparent process where decisions about changes and ontology modeling are not only available to the community, but also includes community feedback and participation. Community members are encouraged to participate in the conversation on existing GitHub issues and share their agreement, disagreement, and/or suggestions based on their expertise and knowledge. Anyone is able to comment on any GitHub issues, as long as they have a GitHub account, which can be created here . Make changes in VBO: We welcome suggestions and updates to our documentation via Pull Requests in GitHub. (Please see here for instruction on how to create a Pull Request) The current system to maintain VBO is based on spreadsheets/components (LINK to somewhere in the document), which is incompatible with changes being made directly in the ontology (ie changes to vbo-edit.owl file) as it is custom in other ontologies. If you are interested in being part of the VBO editor team and make changes directly to the ontology, please reach out to us (AT THIS EMAIL), and we will be happy to train you on the ontology editing.","title":"Contribute"},{"location":"contributing/#how-to-contribute-to-vbo","text":"We welcome any and all kinds of contributions, including: - requests for changes in VBO, including new breed record, record duplication, incorrect breed information, or non-existent breeds. - participation in discussions - documentation improvements","title":"How to contribute to VBO"},{"location":"contributing/#keep-in-touch","text":"The best way to be in touch with the VBO team is by creating an issue on our VBO GitHub repository: https://github.com/monarch-initiative/vertebrate-breed-ontology See how to create a GitHub issue here We also share information about upcoming events (e.g. workshops) and new VBO version releases via email. Please join the VBO mailing list: vbo-users+subconfirm@tislab.org","title":"Keep in touch"},{"location":"contributing/#request-changes-in-vbo","text":"VBO is an open, community-driven ontology. We rely on the community to report errors or improvement in VBO based on their knowledge, experience, and use cases. All requests should be made by submitting an issue in our issue tracker https://github.com/monarch-initiative/vertebrate-breed-ontology/issues. Everyone is welcome and encouraged to submit an issue: all that is required is a GitHub account, which can be created for free here . New term requests When a breed term cannot be found in VBO, one can submit a request to add it. A good term request includes: - the most common name for the breed (required ) - the species of the breed (required ) - any synonyms for the breed name - any publication (e.g. PMID), references, and/or databases supporting the information (required*) - the ORCID of the requester (so we can give you credit in the ontology) Please note that bulk submissions (i.e. requesting more than one term at a time) are welcome. The VBO team can guide you through the best way to submit these requests in a spreadsheet format. changes to an existing VBO term It is possible that some information that is currently in VBO needs to be updated. These changes can include adding new synonyms or new sources of information, merging duplicate records into a single one, or removing a record representing a breed that never existed. For these requests, please add as much information as you can in the GitHub issue. Please make sure to include: - the VBO ID of the existing term for which changes are requested - any publication (e.g. PMID), references, databases supporting your request - the ORCID of the requester (so we can give you credit in the ontology)","title":"Request changes in VBO"},{"location":"contributing/#participate-in-the-discussions","text":"We aim to make VBO development and maintenance a transparent process where decisions about changes and ontology modeling are not only available to the community, but also includes community feedback and participation. Community members are encouraged to participate in the conversation on existing GitHub issues and share their agreement, disagreement, and/or suggestions based on their expertise and knowledge. Anyone is able to comment on any GitHub issues, as long as they have a GitHub account, which can be created here .","title":"Participate in the discussions"},{"location":"contributing/#make-changes-in-vbo","text":"We welcome suggestions and updates to our documentation via Pull Requests in GitHub. (Please see here for instruction on how to create a Pull Request) The current system to maintain VBO is based on spreadsheets/components (LINK to somewhere in the document), which is incompatible with changes being made directly in the ontology (ie changes to vbo-edit.owl file) as it is custom in other ontologies. If you are interested in being part of the VBO editor team and make changes directly to the ontology, please reach out to us (AT THIS EMAIL), and we will be happy to train you on the ontology editing.","title":"Make changes in VBO:"},{"location":"history/","text":"A brief history of VBO Online Mendelian Inheritance in Animals (OMIA) provides up-to-date summary information on all known harmful and beneficial variants in vertebrates (apart from those vertebrates that have their own similar resource), together with background information on all known inherited disorders and non-disease traits, which are collectively called \u2018phenes\u2019. OMIA is hosted by the Sydney School of Veterinary Science (SSVS) within the University of Sydney. As OMIA developed over the past 26 years, breed names were entered as published in the papers reporting the phenes. Inevitably, the resultant OMIA list of breed names contains inconsistencies, duplications and errors. The ever-increasing inter-connectedness of the internet has highlighted the need for OMIA to adopt a standardised vocabulary for breeds that will enable OMIA to be reciprocally hyperlinked with other relevant internet resources. The Anstee Hub for Inherited Diseases of Animals (AHIDA) is a new initiative from the SSVS. Currently under development by the Sydney Informatics Hub (SIH) in collaboration the AHIDA team, and with a projected launch in 2022, it will be a web resource for surveillance, reporting and control of inherited diseases in animals. As with OMIA, AHIDA requires a standardised vocabulary for breeds that will enable AHIDA to be reciprocally hyperlinked with other relevant internet resources. Inspired by the development of the Livestock Breed Ontology (LBO) by Zhiliang Hu, James Reecy and Cari Park at Iowa State University (ISU), the OMIA and AHIDA teams are collaborating with the SIH, with the instigators of the Monarch Initiative and some of their colleagues, and with the creators of LBO to create a breed ontology \u2015 a Vertebrate Breed Ontology (VBO) \u2015 that will include all the known breed names (including synonyms) for all species that are relevant to OMIA and AHIDA. By far the most comprehensive global resource for breeds is the list of breed names and synonyms compiled by the Food and Agriculture Organisation (FAO) of the United Nations in its Domestic Animal Diversity Information System (DADIS) . A powerful attribute of DADIS is that its information is contributed and updated by designated National Coordinators from each of 182 countries. DADIS contains information on more than 15,000 national breed populations representing more than 8,800 breeds across 38 species. In collaboration with FAO colleagues responsible for DADIS (Roswitha Baumung and Gregoire Leroy), the VBO team is using the DADIS list of breed names and synonyms as the basis for the development of the VBO. Breed names and synonyms not included in the DADIS list, e.g. for cats, will be added to the VBO. OMIA breed names will then be mapped to VBO ids, as will LBO ids and ids or names from other relevant breed lists. Once developed, the VBO will be incorporated into OMIA and AHIDA, and will be made freely available. It is recognised that, as with the LBO, there will be a continual need for enhancement of the VBO. More information can be found at http://obofoundry.org/ontology/vbo","title":"History"},{"location":"history/#a-brief-history-of-vbo","text":"Online Mendelian Inheritance in Animals (OMIA) provides up-to-date summary information on all known harmful and beneficial variants in vertebrates (apart from those vertebrates that have their own similar resource), together with background information on all known inherited disorders and non-disease traits, which are collectively called \u2018phenes\u2019. OMIA is hosted by the Sydney School of Veterinary Science (SSVS) within the University of Sydney. As OMIA developed over the past 26 years, breed names were entered as published in the papers reporting the phenes. Inevitably, the resultant OMIA list of breed names contains inconsistencies, duplications and errors. The ever-increasing inter-connectedness of the internet has highlighted the need for OMIA to adopt a standardised vocabulary for breeds that will enable OMIA to be reciprocally hyperlinked with other relevant internet resources. The Anstee Hub for Inherited Diseases of Animals (AHIDA) is a new initiative from the SSVS. Currently under development by the Sydney Informatics Hub (SIH) in collaboration the AHIDA team, and with a projected launch in 2022, it will be a web resource for surveillance, reporting and control of inherited diseases in animals. As with OMIA, AHIDA requires a standardised vocabulary for breeds that will enable AHIDA to be reciprocally hyperlinked with other relevant internet resources. Inspired by the development of the Livestock Breed Ontology (LBO) by Zhiliang Hu, James Reecy and Cari Park at Iowa State University (ISU), the OMIA and AHIDA teams are collaborating with the SIH, with the instigators of the Monarch Initiative and some of their colleagues, and with the creators of LBO to create a breed ontology \u2015 a Vertebrate Breed Ontology (VBO) \u2015 that will include all the known breed names (including synonyms) for all species that are relevant to OMIA and AHIDA. By far the most comprehensive global resource for breeds is the list of breed names and synonyms compiled by the Food and Agriculture Organisation (FAO) of the United Nations in its Domestic Animal Diversity Information System (DADIS) . A powerful attribute of DADIS is that its information is contributed and updated by designated National Coordinators from each of 182 countries. DADIS contains information on more than 15,000 national breed populations representing more than 8,800 breeds across 38 species. In collaboration with FAO colleagues responsible for DADIS (Roswitha Baumung and Gregoire Leroy), the VBO team is using the DADIS list of breed names and synonyms as the basis for the development of the VBO. Breed names and synonyms not included in the DADIS list, e.g. for cats, will be added to the VBO. OMIA breed names will then be mapped to VBO ids, as will LBO ids and ids or names from other relevant breed lists. Once developed, the VBO will be incorporated into OMIA and AHIDA, and will be made freely available. It is recognised that, as with the LBO, there will be a continual need for enhancement of the VBO. More information can be found at http://obofoundry.org/ontology/vbo","title":"A brief history of VBO"},{"location":"VBO-editor-documents/components/","text":"Ontology components An ontology can include information external to the actual ontology, such as \"imports\" and \"components\" (more details here ). Imports represent subsets of external ontologies that are re-used in the ontology (e.g. COB, RO, OMO are ontologies imported into VBO). Components are part of the ontology but are managed/maintained outside of the ontology; for example, a component is a part of the ontology managed in ROBOT templates. VBO was created such that it is managed in ROBOT templates, ie the source of truth for VBO terms (id, labels, synonyms,etc) is ROBOT templates maintained in google sheets. The ontology editing is done in these ROBOT templates; the ontology is then updated by a process refreshing the components. How to refresh components Refreshing ROBOT templates from Google Sheets: cd src/ontology sh run.sh make sync_google_sheets This will download the Google sheets as TSV and store them in the components directory. Updating components cd src/ontology sh run.sh make components/breeds.owl This will refresh the breeds component based on the current ROBOT template stored in components/breeds.tsv. To update ALL the components, use the command: sh run.sh make recreate-components Note: The component will not update unless the content of the google sheet or the vbo-edit file has changed. To \"force\" the update, add -B at the end of the command. For example: sh run.sh make components/breeds.owl -B Adding entirely new components: Add the name of the component to src/ontology/vbo-odk.yaml (in the components/products section, like breeds.owl ). Run sh run.sh make update_repo Add the component to the sync_google_sheets make commmand in vbo.Makefile , essentially: creating a new variable for it (like BREED_TEMPLATE ) adding a wget command underneat the one that is currrently there. sync_google_sheets: wget $(BREED_TEMPLATE) -O $(COMPONENTSDIR)/breeds.tsv wget $(NEW_TEMPLATE) -O $(COMPONENTSDIR)/new.tsv Add the component to the list of imports in src/ontology/vbo-edit.owl Add the component to src/ontology/catalog-v001.xml (analogous to the breed one) Update the component","title":"Components"},{"location":"VBO-editor-documents/components/#ontology-components","text":"An ontology can include information external to the actual ontology, such as \"imports\" and \"components\" (more details here ). Imports represent subsets of external ontologies that are re-used in the ontology (e.g. COB, RO, OMO are ontologies imported into VBO). Components are part of the ontology but are managed/maintained outside of the ontology; for example, a component is a part of the ontology managed in ROBOT templates. VBO was created such that it is managed in ROBOT templates, ie the source of truth for VBO terms (id, labels, synonyms,etc) is ROBOT templates maintained in google sheets. The ontology editing is done in these ROBOT templates; the ontology is then updated by a process refreshing the components.","title":"Ontology components"},{"location":"VBO-editor-documents/components/#how-to-refresh-components","text":"","title":"How to refresh components"},{"location":"VBO-editor-documents/components/#refreshing-robot-templates-from-google-sheets","text":"cd src/ontology sh run.sh make sync_google_sheets This will download the Google sheets as TSV and store them in the components directory.","title":"Refreshing ROBOT templates from Google Sheets:"},{"location":"VBO-editor-documents/components/#updating-components","text":"cd src/ontology sh run.sh make components/breeds.owl This will refresh the breeds component based on the current ROBOT template stored in components/breeds.tsv. To update ALL the components, use the command: sh run.sh make recreate-components Note: The component will not update unless the content of the google sheet or the vbo-edit file has changed. To \"force\" the update, add -B at the end of the command. For example: sh run.sh make components/breeds.owl -B","title":"Updating components"},{"location":"VBO-editor-documents/components/#adding-entirely-new-components","text":"Add the name of the component to src/ontology/vbo-odk.yaml (in the components/products section, like breeds.owl ). Run sh run.sh make update_repo Add the component to the sync_google_sheets make commmand in vbo.Makefile , essentially: creating a new variable for it (like BREED_TEMPLATE ) adding a wget command underneat the one that is currrently there. sync_google_sheets: wget $(BREED_TEMPLATE) -O $(COMPONENTSDIR)/breeds.tsv wget $(NEW_TEMPLATE) -O $(COMPONENTSDIR)/new.tsv Add the component to the list of imports in src/ontology/vbo-edit.owl Add the component to src/ontology/catalog-v001.xml (analogous to the breed one) Update the component","title":"Adding entirely new components:"},{"location":"VBO-editor-documents/merge_obsolete_editor/","text":"Merging and obsoleting classes Terms to be obsoleted or merged should be reported in a GitHub issue . Obsoleted terms are maintained in a ROBOT Template which is the source for the \u201cobsolete\u201d component in VBO. Term merging When merging a term (=obsolete_term) into another term (=merged_into_term) Add the obsolete_term information (copied to the original ROBOT template) to the \u201cobsolete\u201d ROBOT template: VBO ID : (required) TYPE : (required) , should be \u201cowl:Class\u201d owl:deprecated : (required) , should be \u201ctrue\u201d \u2018term replaced by\u2019 : (required) add the merged_into_term vbo id \u2018has obsolescence reason\u2019 : (required) write 'terms merged' in the literal field \u2018term tracker item\u2019 : (required) , add the link to the GitHub issue where the obsoletion/merge was discussed, should be type \u2018xsd:anyURI\u2019 Comment : (optional) Add the obsolete_term information (copied to the original ROBOT template) to the \u201cmerged_into_term\u201d (on the ROBOT template): The original obsolete_term label should be added as an exact synonym, with the original obsolete_term VBO id as a source Every other annotation and SubClassOf should be added to the \u201cmerged_into_term\u201d, with their original source(s); review to ensure that there is no duplicate (when annotations are duplicate, add all sources under a single annotation). This includes: synonyms sources contributors xref Comment (note that only one comment is allowed per term, therefore comments might be merged SubClassOf Remove the \u2018obsolete_term\u2019 from the original ROBOT template Update components Term obsoletion (without merging) Add the obsolete_term information (copied to the original ROBOT template) to the \u201cobsolete\u201d ROBOT template: VBO ID : (required) LABEL : (required) , add \u201cobsolete\u201d in front of the original template TYPE : (required) , should be \u201cowl:Class\u201d owl:deprecated : (required) , should be \u201ctrue\u201d \u2018has obsolescence reason\u2019 : (required) \u2018term tracker item\u2019 \u2019: (required) , add the link to the GitHub issue where the obsoletion/merge was discussed, should be type \u2018xsd:anyURI\u2019 Plus all the other annotations from the obsolete_term including their original source. This includes 1. Synonyms 2. Sources 3. Contributors 4. \u2026 5. **Do NOT** include SubClassOf Remove the \u2018obsolete_term\u2019 from the original ROBOT template Update components","title":"Merging/obsoleting classes"},{"location":"VBO-editor-documents/merge_obsolete_editor/#merging-and-obsoleting-classes","text":"Terms to be obsoleted or merged should be reported in a GitHub issue . Obsoleted terms are maintained in a ROBOT Template which is the source for the \u201cobsolete\u201d component in VBO.","title":"Merging and obsoleting classes"},{"location":"VBO-editor-documents/merge_obsolete_editor/#term-merging","text":"When merging a term (=obsolete_term) into another term (=merged_into_term) Add the obsolete_term information (copied to the original ROBOT template) to the \u201cobsolete\u201d ROBOT template: VBO ID : (required) TYPE : (required) , should be \u201cowl:Class\u201d owl:deprecated : (required) , should be \u201ctrue\u201d \u2018term replaced by\u2019 : (required) add the merged_into_term vbo id \u2018has obsolescence reason\u2019 : (required) write 'terms merged' in the literal field \u2018term tracker item\u2019 : (required) , add the link to the GitHub issue where the obsoletion/merge was discussed, should be type \u2018xsd:anyURI\u2019 Comment : (optional) Add the obsolete_term information (copied to the original ROBOT template) to the \u201cmerged_into_term\u201d (on the ROBOT template): The original obsolete_term label should be added as an exact synonym, with the original obsolete_term VBO id as a source Every other annotation and SubClassOf should be added to the \u201cmerged_into_term\u201d, with their original source(s); review to ensure that there is no duplicate (when annotations are duplicate, add all sources under a single annotation). This includes: synonyms sources contributors xref Comment (note that only one comment is allowed per term, therefore comments might be merged SubClassOf Remove the \u2018obsolete_term\u2019 from the original ROBOT template Update components","title":"Term merging"},{"location":"VBO-editor-documents/merge_obsolete_editor/#term-obsoletion-without-merging","text":"Add the obsolete_term information (copied to the original ROBOT template) to the \u201cobsolete\u201d ROBOT template: VBO ID : (required) LABEL : (required) , add \u201cobsolete\u201d in front of the original template TYPE : (required) , should be \u201cowl:Class\u201d owl:deprecated : (required) , should be \u201ctrue\u201d \u2018has obsolescence reason\u2019 : (required) \u2018term tracker item\u2019 \u2019: (required) , add the link to the GitHub issue where the obsoletion/merge was discussed, should be type \u2018xsd:anyURI\u2019 Plus all the other annotations from the obsolete_term including their original source. This includes 1. Synonyms 2. Sources 3. Contributors 4. \u2026 5. **Do NOT** include SubClassOf Remove the \u2018obsolete_term\u2019 from the original ROBOT template Update components","title":"Term obsoletion (without merging)"},{"location":"VBO-editor-documents/release/","text":"Ontology release VBO is released on a monthly basis around the first of the month. All VBO releases are available here . Please note that this document was created for editor's convenience when creating a new release. Detailed description of ontology release process has been reported elsewhere (for example here and here ). VBO release is done using ODK, and includes 1. Update Imports and Components 1. Run a release using ODK 1. Merge the release 1. Create a GitHub release Notes: - All the commands should be done in the Terminal, from the folder vertebrate-breed-ontology/src/ontology - You must have docker installed Update Imports and Components Update imports using the command: sh run.sh make refresh-imports This will refresh ALL the imports. Update components (see details here ) sh run.sh make sync_google_sheets sh run.sh make recreate-components Create a PR, wait for the QC checks to pass, and merge to Master. Run the release Before starting the release - Make sure that all the pull requests are merged into the master branch. - Make sure you have the latest ODK installed by running docker pull obolibrary/odkfull - Create a new branch (e.g. release-YYYY-MM-DD ) Running the release 1. Run: sh run.sh make prepare_release IMP=false -B Note: IMP=false means that we are running the release without updated the imports (we updated them in the previous step) 1. Review the release: check that changes made in the ontology can be found in the new vbo.owl 2. If changes are as expected, create a PR. 3. Once the QC checks have successfully passed, merge to Master Create a GitHub release Go to https://github.com/monarch-initiative/vertebrate-breed-ontology/releases Click \"Draft new release\" Click \"Choose a tag\". Format for tag version should be : vYYYY-MM-DD (ie date prefixed with a v) The tag version must be the date on which the ontology was built. (!!!!!!! the date on which the ontology was built might not be the same as the date on your local calendar; eg the ontology could be built on European time, which might be a day after US pacific time day. Check the ontology files to make sure you use the correct date) Write the release title: for VBO, we use the same name as the tag: for example v2023-01-01 Write a description (conventions for VBO are TBD) Click \"Publish release\" You are done! Congratulations!","title":"Release process"},{"location":"VBO-editor-documents/release/#ontology-release","text":"VBO is released on a monthly basis around the first of the month. All VBO releases are available here . Please note that this document was created for editor's convenience when creating a new release. Detailed description of ontology release process has been reported elsewhere (for example here and here ). VBO release is done using ODK, and includes 1. Update Imports and Components 1. Run a release using ODK 1. Merge the release 1. Create a GitHub release Notes: - All the commands should be done in the Terminal, from the folder vertebrate-breed-ontology/src/ontology - You must have docker installed","title":"Ontology release"},{"location":"VBO-editor-documents/release/#update-imports-and-components","text":"Update imports using the command: sh run.sh make refresh-imports This will refresh ALL the imports. Update components (see details here ) sh run.sh make sync_google_sheets sh run.sh make recreate-components Create a PR, wait for the QC checks to pass, and merge to Master.","title":"Update Imports and Components"},{"location":"VBO-editor-documents/release/#run-the-release","text":"Before starting the release - Make sure that all the pull requests are merged into the master branch. - Make sure you have the latest ODK installed by running docker pull obolibrary/odkfull - Create a new branch (e.g. release-YYYY-MM-DD ) Running the release 1. Run: sh run.sh make prepare_release IMP=false -B Note: IMP=false means that we are running the release without updated the imports (we updated them in the previous step) 1. Review the release: check that changes made in the ontology can be found in the new vbo.owl 2. If changes are as expected, create a PR. 3. Once the QC checks have successfully passed, merge to Master","title":"Run the release"},{"location":"VBO-editor-documents/release/#create-a-github-release","text":"Go to https://github.com/monarch-initiative/vertebrate-breed-ontology/releases Click \"Draft new release\" Click \"Choose a tag\". Format for tag version should be : vYYYY-MM-DD (ie date prefixed with a v) The tag version must be the date on which the ontology was built. (!!!!!!! the date on which the ontology was built might not be the same as the date on your local calendar; eg the ontology could be built on European time, which might be a day after US pacific time day. Check the ontology files to make sure you use the correct date) Write the release title: for VBO, we use the same name as the tag: for example v2023-01-01 Write a description (conventions for VBO are TBD) Click \"Publish release\" You are done! Congratulations!","title":"Create a GitHub release"},{"location":"general/MIRO/","text":"Minimum Information for the Reporting of an Ontology Documentation coming up","title":"VBO MIRO information"},{"location":"general/MIRO/#minimum-information-for-the-reporting-of-an-ontology","text":"Documentation coming up","title":"Minimum Information for the Reporting of an Ontology"},{"location":"general/contributors/","text":"VBO Contributors Documentation coming up","title":"VBO Contributors"},{"location":"general/contributors/#vbo-contributors","text":"Documentation coming up","title":"VBO Contributors"},{"location":"general/general/","text":"General Information about VBO The Vertebrate Breed Ontology (VBO) was created by the Monarch Initiative, in collaboration with the Online Mendelian Inheritance in Animals ( OMIA ), as a means of incorporating all breed names into a single computable resource. The first version of VBO was based on the Domestic Animal Diversity Information System (DAD-IS) breeds list created and maintained by the United Nations\u2019 Food and Agriculture Organization (FAO), and has been created using standard semantic engineering tools including the Ontology Development Kit (ODK). VBO serves as a single, computable resource for vertebrate breed names. It is used in databases such as OMIA and veterinarian health records to make non-human information more computable and consistent, therefore enhancing data interoperability. VBO is restricted to non-human vertebrate animal species. It covers breeds and breed populations for livestock, companion animals, and laboratory animals. What is a breed in VBO? Many definitions of 'breed' exist in the literature and in different communities. In VBO, a 'breed' is defined as: A taxonomic entity representing a population of vertebrate animals that share specific characteristics (such as traits, behavior, genetics) and/or for which cultural or geographical separation has led to the general acceptance of its separate identity. Breeds included in VBO have been characterized, defined, and determined by international breed organizations, communities, experts, and/or have been reported in the literature (see table below). VBO terms can be used in the same way that NCBITaxon are used. Breed information sources The following table includes breed organizations, communities, and experts which reported, characterized, defined, and/or determined the breeds included in VBO Breeds Sources Sources links Livestock Breeds Domestic Animal Diversity Information (DAD-IS) https://www.fao.org/dad-is/en/ Livestock Breeds Livestock Breed Ontology (LBO) https://www.animalgenome.org/bioinfo/projects/lbo/ Cat Breeds The Cat Fanciers\u2019 Association (CFA) https://cfa.org/initial Cat Breeds F\u00e9d\u00e9ration Internationale F\u00e9line (FIFe) http://fifeweb.org/index.php Cat Breeds Governing Council of the Cat Fancy (GCCF) https://www.gccfcats.org/ Cat Breeds Rare and Exotic Feline Registry (REFR) https://www.rareexoticfelineregistry.com/ Cat Breeds The International Cat Association (TICA) https://www.tica.org/ Cat Breeds Wikipedia, List of cat breeds (Wiki) https://en.wikipedia.org/wiki/List_of_cat_breeds#Breeds Cat Breeds World Cat Congress (WCC) https://www.worldcatcongress.org/index.php Cat Breeds World Cat Federation (WCF) https://wcf.de/en/ Cat Breeds The Feline Genetics and Comparative Medicine Laboratory of Professor Leslie Lyons (Lyons) http://felinegenetics.missouri.edu/ Dog Breeds American Kennel Club (AKC) https://www.akc.org/ Dog Breeds Canadian Kennel Club (CKC) https://www.ckc.ca/en Dog Breeds F\u00e9d\u00e9ration Cynologique Internationale (FCI) https://www.fci.be/en/ Dog Breeds iDog https://ngdc.cncb.ac.cn/idog/ Dog Breeds The Kennel Club (KC) https://www.thekennelclub.org.uk/ Dog Breeds Svenska Kennelklubbe (SKK) upcoming Dog Breeds United Kennel Club (UKC) https://www.ukcdogs.com/ Dog Breeds Wikipedia https://en.wikipedia.org/wiki/List_of_dog_breeds Lab Animal Breeds upcoming","title":"VBO general information"},{"location":"general/general/#general-information-about-vbo","text":"The Vertebrate Breed Ontology (VBO) was created by the Monarch Initiative, in collaboration with the Online Mendelian Inheritance in Animals ( OMIA ), as a means of incorporating all breed names into a single computable resource. The first version of VBO was based on the Domestic Animal Diversity Information System (DAD-IS) breeds list created and maintained by the United Nations\u2019 Food and Agriculture Organization (FAO), and has been created using standard semantic engineering tools including the Ontology Development Kit (ODK). VBO serves as a single, computable resource for vertebrate breed names. It is used in databases such as OMIA and veterinarian health records to make non-human information more computable and consistent, therefore enhancing data interoperability. VBO is restricted to non-human vertebrate animal species. It covers breeds and breed populations for livestock, companion animals, and laboratory animals.","title":"General Information about VBO"},{"location":"general/general/#what-is-a-breed-in-vbo","text":"Many definitions of 'breed' exist in the literature and in different communities. In VBO, a 'breed' is defined as: A taxonomic entity representing a population of vertebrate animals that share specific characteristics (such as traits, behavior, genetics) and/or for which cultural or geographical separation has led to the general acceptance of its separate identity. Breeds included in VBO have been characterized, defined, and determined by international breed organizations, communities, experts, and/or have been reported in the literature (see table below). VBO terms can be used in the same way that NCBITaxon are used.","title":"What is a breed in VBO?"},{"location":"general/general/#breed-information-sources","text":"The following table includes breed organizations, communities, and experts which reported, characterized, defined, and/or determined the breeds included in VBO Breeds Sources Sources links Livestock Breeds Domestic Animal Diversity Information (DAD-IS) https://www.fao.org/dad-is/en/ Livestock Breeds Livestock Breed Ontology (LBO) https://www.animalgenome.org/bioinfo/projects/lbo/ Cat Breeds The Cat Fanciers\u2019 Association (CFA) https://cfa.org/initial Cat Breeds F\u00e9d\u00e9ration Internationale F\u00e9line (FIFe) http://fifeweb.org/index.php Cat Breeds Governing Council of the Cat Fancy (GCCF) https://www.gccfcats.org/ Cat Breeds Rare and Exotic Feline Registry (REFR) https://www.rareexoticfelineregistry.com/ Cat Breeds The International Cat Association (TICA) https://www.tica.org/ Cat Breeds Wikipedia, List of cat breeds (Wiki) https://en.wikipedia.org/wiki/List_of_cat_breeds#Breeds Cat Breeds World Cat Congress (WCC) https://www.worldcatcongress.org/index.php Cat Breeds World Cat Federation (WCF) https://wcf.de/en/ Cat Breeds The Feline Genetics and Comparative Medicine Laboratory of Professor Leslie Lyons (Lyons) http://felinegenetics.missouri.edu/ Dog Breeds American Kennel Club (AKC) https://www.akc.org/ Dog Breeds Canadian Kennel Club (CKC) https://www.ckc.ca/en Dog Breeds F\u00e9d\u00e9ration Cynologique Internationale (FCI) https://www.fci.be/en/ Dog Breeds iDog https://ngdc.cncb.ac.cn/idog/ Dog Breeds The Kennel Club (KC) https://www.thekennelclub.org.uk/ Dog Breeds Svenska Kennelklubbe (SKK) upcoming Dog Breeds United Kennel Club (UKC) https://www.ukcdogs.com/ Dog Breeds Wikipedia https://en.wikipedia.org/wiki/List_of_dog_breeds Lab Animal Breeds upcoming","title":"Breed information sources"},{"location":"general/sources-cat/","text":"Sources for Cat Breeds The Cat Fanciers\u2019 Association (CFA) Home page: https://cfa.org/ Description: The Cat Fanciers\u2019 Association is a not-for-profit organization founded in 1906, after breaking ties with the American Cat Association. The association continues its mission by: Promoting the welfare of all cats through progressive actions which ranges from legislative advocacy to the support of feline research and providing breeder assistance; maintaining a focus on the quality of its breed standards and the validity of its registration and pedigrees; providing support to its member clubs who serve as Ambassadors to the general public; promoting the interests of breeders and exhibitors of pedigreed cats. Data breeds notes: The word BREED is used to mean natural breeds, established breeds, mutations, and hybrids. A breed may have specific policies regarding allowable ancestry, import requirements, colors and other characteristics. CFA currently recognizes 45 pedigreed breeds, as well as non-pedigreed Companion Cats (CCW). Forty two breeds are eligible to compete in the Championship, Premiership, Kitten and Veteran Classes. Three breeds (the Khao Manee, Lykoi, and Toybob) are eligible to be shown in the non-competitive classes (Miscellaneous or Provisional), working toward advancement to championship status. Companion Cats (CCW) are eligible to compete in the Household Pet (HHP) class. Characteristics for breeds available here: https://cfa.org/breeds/. Data synchronization: The data in VBO coming from this source is currently not regularly updated. F\u00e9d\u00e9ration Internationale F\u00e9line (FIFe) Home page: http://fifeweb.org/index.php Description: The FIFe can be considered as the United Nations of Cat Federations. In fact it is a federation of national members representing, at present, 40 countries with 42 full members, but whose numbers continue to grow. These member organizations have chosen to follow the same rules with regard to the breed standards, breeding and registration, cattery names, shows, judges and student judges. This common interest has, over the years, been consolidated to create the high standard and international reputation of the FIFe. Data breeds notes: The cat should exhibit the typical characteristics of its breed and its general health and well being should be evident. There are currently 48 fully recognized breeds. There are currently no breeds and varieties in the preliminary recognition phase. House cat longhair (HCL) and House cat shorthair (HCS) are non-recognized breeds. Characteristics for breeds available here: http://fifeweb.org/wp/breeds/breeds_prf_stn.php. Data synchronization: The data in VBO coming from this source is currently not regularly updated. Governing Council of the Cat Fancy (GCCF) Home page: https://www.gccfcats.org/ Description: The premier cat registration organization in the UK dedicated to cat health, welfare and responsible breeding. The objective is to ensure that cats live healthy, happy lives. The GCCF operates a genetic based register. It is therefore fundamental to the spirit and ethos of the organisation that it should seek in every way to safeguard the genetic health and integrity of all breeds recognised for inclusion on that register. The General Breeding Policy offers advice and guidance for the dedicated and ethical breeder to (1) develop and progress any pedigree breed whether for show or companion purposes; (2) improve the quality of phenotype (appearance) of any given breed, through a robust process of selective breeding, towards the ideal described in the breed standard; and(3) maintain a robust, healthy and viable breeding population of any given breed through consideration of the genetic outcome of any breeding programme. Data breeds notes: The GCCF recognises 40 different cat breeds. Some breeds have both long-haired and short-haired varieties. Characteristics for breeds and recognition status by breed available here: https://www.gccfcats.org/getting-a-cat/choosing/cat-breeds/. Data synchronization: The data in VBO coming from this source is currently not regularly updated. The Feline Genetics and Comparative Medicine Laboratory of Professor Leslie Lyons (Lyons) Home page: http://felinegenetics.missouri.edu/ Description: The Feline Genetics and Comparative Medicine Laboratory of Professor Leslie Lyons (https://orcid.org/0000-0002-1628-7726) is located in the University of Missouri \u2013 College of Veterinary Medicine. Research focuses on the genetics of the domestic cat and the development of genetic tools and resources that assist gene mapping in the cat and other companion animals. Feline research is focused on the discovery of mutations that cause inherited diseases and phenotypic traits and in the population dynamics of breed development and domestic cat evolution. Data breeds notes: The Feline Genetics and Comparative Medicine Laboratory of Professor Leslie Lyons maintains an unpublished list of cat breeds. Each cat breed in VBO which is also present in the unpublished list of cat breeds maintained by Professor Leslie Lyons contains the annotation property in VBO dcterms: contributor https://orcid.org/0000-0002-1628-7726. Data synchronization: The data in VBO coming from this source is currently not regularly updated. Online Mendelian Inheritance in Animals (OMIA) Home page: https://www.omia.org/home/ Description: Online Mendelian Inheritance in Animals (OMIA) is a catalogue/compendium of inherited disorders, other (single-locus) traits, and associated genes and variants in 346 animal species (other than human and mouse and rats and zebrafish, which have their own resources) co-authored by Professor Frank Nicholas and Associate Professor Imke Tammen of the University of Sydney, Australia, with help from many people over the years. OMIA information is stored in a database that contains textual information and references, as well as links to relevant PubMed and Gene records at the NCBI, and to OMIM and Ensembl. Data breeds notes: OMIA maintains an unpublished list of cat breeds and corresponding OMIA database identification numbers for each breed. For example, the OMIA breed identification number for Abyssinian in the OMIA database is 195. Each cat breed in VBO which is also present in the unpublished list of cat breeds maintained by OMIA, contains the annotation property in VBO database_cross_reference OMIA: breed identification number. Data synchronization: The data in VBO coming from this source is currently not regularly updated. Rare and Exotic Feline Registry (REFR) Home page: https://www.rareexoticfelineregistry.com/ Description: The Rare and Exotic Feline Registry was founded in 1984 to promote the responsible development of new breeds of cats. The registry promotes the responsible breeding and health of all felines. The registry recognizes and registers most breeds of cats conforming to uniform breed profiles. Data breeds notes: Breed is defined as a population of cats which have certain physical characteristics in common. These characteristics are outlined in the written breed profile for each breed. Characteristics for breeds available here: https://www.rareexoticfelineregistry.com/breed-recognition/ Data synchronization: The data in VBO coming from this source is currently not regularly updated. The International Cat Association (TICA) Home page: https://www.tica.org/ Description: TICA is the world's largest genetic registry of pedigreed cats, and the world's largest registry of household pets. As the world's largest genetic registry of pedigreed cats, TICA currently recognizes 73 breeds of cats for championship competition. In addition, the number of breeds can change as new breeds are developed. Data breeds notes: Championship Breeds: Breeds of cats who have been accepted for the championship and are recognized as being eligible to compete in TICA sanctioned shows and eligible for appropriate titles and/or computation of Annual Awards. These cats must be 8 months of age or more and may be male, female, neuter or spay. Pedigreed kittens (under 8 months of age) do not earn titles, but are eligible to compete in TICA sanctioned shows and may earn points towards Annual Awards. Non-Championship Breeds: This class consists of Household Pets and Household Pet Kittens. Household pets earn titles comparable to Championship cats and are eligible to compete in TICA sanctioned shows and may earn points towards Annual Awards. Household pet kittens do not earn titles, but are eligible to compete in TICA sanctioned shows and may earn points towards Annual Awards. Advanced New Breeds: The second level of the Championship Advancement Class Program. These breeds are eligible to be shown in TICA sanctioned shows but do not earn titles or points towards Annual Awards and must follow specific rules to be eligible for championship status. Preliminary New Breeds: The beginning level of the Championship Advancement Class Program. These breeds are eligible to be shown in TICA sanctioned shows but do not earn titles or points towards Annual Awards and must follow specific rules to be eligible for the next step in achieving championship status. Characteristics for breeds available here: https://www.tica.org/breeds/browse-all-breeds Data synchronization: The data in VBO coming from this source is currently not regularly updated. Wikipedia, List of cat breeds (Wiki) Home page: https://en.wikipedia.org/wiki/List_of_cat_breeds#Breeds Description: The following list of cat breeds includes only domestic cat breeds and domestic and wild hybrids. The list includes established breeds recognized by various cat registries, new and experimental breeds, landraces being established as standardized breeds, distinct domestic populations not being actively developed and lapsed (extinct) breeds. Inconsistency in a breed classification and naming among registries means that an individual animal may be considered different breeds by different registries (though not necessarily eligible for registry in them all, depending on its exact ancestry). Data breeds notes: Wikipedia does not report its own recognition status. Characteristics for breeds available here: https://en.wikipedia.org/wiki/List_of_cat_breeds#Breeds Data synchronization: The data in VBO coming from this source is currently not regularly updated. World Cat Congress (WCC) Home page: https://www.worldcatcongress.org/index.php Description: The object of this Congress is to work openly and honestly together in a spirit of co-operation to improve the health and welfare of all cats and encourage the sharing of resources to promote the interests and to educate the participants of the \u2018Cat Fancy\u2019 throughout the world. Data breeds notes: World Cat Congress does not report its own recognition status, but rather provides a comparison of breed name, recognition status, breed code, allowable outcrosses, recognized colors, breed restrictions and special notes for the member organizations that include CFA, FIFe, GCCF, TICA and WCF. Characteristics of breeds available here: https://www.worldcatcongress.org/wp/cat_breed_comp_aby.php Data synchronization: The data in VBO coming from this source is currently not regularly updated. World Cat Federation (WCF) Home page: https://wcf.de/en/ Description: The WCF is a global operating federation of cat clubs. The WCF is registered as an international federation at the registration court in Germany. Currently 280 associations worldwide are affiliated with the WCF. Data breeds notes: Championship status is granted to all breeds recognized or preliminary recognized by WCF, to all breeds recognized by one WCC Member, and to all breeds recognized by a WCF Cooperation partner. The non-recognized breed category is comprised of Non Recognized Hairless, Non Recognized Shorthair and Non Recognized Longhair. Characteristics of breeds available here: https://wcf.de/en/ Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Sources for Cat Breeds"},{"location":"general/sources-cat/#sources-for-cat-breeds","text":"","title":"Sources for Cat Breeds"},{"location":"general/sources-cat/#the-cat-fanciers-association-cfa","text":"Home page: https://cfa.org/ Description: The Cat Fanciers\u2019 Association is a not-for-profit organization founded in 1906, after breaking ties with the American Cat Association. The association continues its mission by: Promoting the welfare of all cats through progressive actions which ranges from legislative advocacy to the support of feline research and providing breeder assistance; maintaining a focus on the quality of its breed standards and the validity of its registration and pedigrees; providing support to its member clubs who serve as Ambassadors to the general public; promoting the interests of breeders and exhibitors of pedigreed cats. Data breeds notes: The word BREED is used to mean natural breeds, established breeds, mutations, and hybrids. A breed may have specific policies regarding allowable ancestry, import requirements, colors and other characteristics. CFA currently recognizes 45 pedigreed breeds, as well as non-pedigreed Companion Cats (CCW). Forty two breeds are eligible to compete in the Championship, Premiership, Kitten and Veteran Classes. Three breeds (the Khao Manee, Lykoi, and Toybob) are eligible to be shown in the non-competitive classes (Miscellaneous or Provisional), working toward advancement to championship status. Companion Cats (CCW) are eligible to compete in the Household Pet (HHP) class. Characteristics for breeds available here: https://cfa.org/breeds/. Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"The Cat Fanciers\u2019 Association (CFA)"},{"location":"general/sources-cat/#federation-internationale-feline-fife","text":"Home page: http://fifeweb.org/index.php Description: The FIFe can be considered as the United Nations of Cat Federations. In fact it is a federation of national members representing, at present, 40 countries with 42 full members, but whose numbers continue to grow. These member organizations have chosen to follow the same rules with regard to the breed standards, breeding and registration, cattery names, shows, judges and student judges. This common interest has, over the years, been consolidated to create the high standard and international reputation of the FIFe. Data breeds notes: The cat should exhibit the typical characteristics of its breed and its general health and well being should be evident. There are currently 48 fully recognized breeds. There are currently no breeds and varieties in the preliminary recognition phase. House cat longhair (HCL) and House cat shorthair (HCS) are non-recognized breeds. Characteristics for breeds available here: http://fifeweb.org/wp/breeds/breeds_prf_stn.php. Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"F\u00e9d\u00e9ration Internationale F\u00e9line (FIFe)"},{"location":"general/sources-cat/#governing-council-of-the-cat-fancy-gccf","text":"Home page: https://www.gccfcats.org/ Description: The premier cat registration organization in the UK dedicated to cat health, welfare and responsible breeding. The objective is to ensure that cats live healthy, happy lives. The GCCF operates a genetic based register. It is therefore fundamental to the spirit and ethos of the organisation that it should seek in every way to safeguard the genetic health and integrity of all breeds recognised for inclusion on that register. The General Breeding Policy offers advice and guidance for the dedicated and ethical breeder to (1) develop and progress any pedigree breed whether for show or companion purposes; (2) improve the quality of phenotype (appearance) of any given breed, through a robust process of selective breeding, towards the ideal described in the breed standard; and(3) maintain a robust, healthy and viable breeding population of any given breed through consideration of the genetic outcome of any breeding programme. Data breeds notes: The GCCF recognises 40 different cat breeds. Some breeds have both long-haired and short-haired varieties. Characteristics for breeds and recognition status by breed available here: https://www.gccfcats.org/getting-a-cat/choosing/cat-breeds/. Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Governing Council of the Cat Fancy (GCCF)"},{"location":"general/sources-cat/#the-feline-genetics-and-comparative-medicine-laboratory-of-professor-leslie-lyons-lyons","text":"Home page: http://felinegenetics.missouri.edu/ Description: The Feline Genetics and Comparative Medicine Laboratory of Professor Leslie Lyons (https://orcid.org/0000-0002-1628-7726) is located in the University of Missouri \u2013 College of Veterinary Medicine. Research focuses on the genetics of the domestic cat and the development of genetic tools and resources that assist gene mapping in the cat and other companion animals. Feline research is focused on the discovery of mutations that cause inherited diseases and phenotypic traits and in the population dynamics of breed development and domestic cat evolution. Data breeds notes: The Feline Genetics and Comparative Medicine Laboratory of Professor Leslie Lyons maintains an unpublished list of cat breeds. Each cat breed in VBO which is also present in the unpublished list of cat breeds maintained by Professor Leslie Lyons contains the annotation property in VBO dcterms: contributor https://orcid.org/0000-0002-1628-7726. Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"The Feline Genetics and Comparative Medicine Laboratory of Professor Leslie Lyons (Lyons)"},{"location":"general/sources-cat/#online-mendelian-inheritance-in-animals-omia","text":"Home page: https://www.omia.org/home/ Description: Online Mendelian Inheritance in Animals (OMIA) is a catalogue/compendium of inherited disorders, other (single-locus) traits, and associated genes and variants in 346 animal species (other than human and mouse and rats and zebrafish, which have their own resources) co-authored by Professor Frank Nicholas and Associate Professor Imke Tammen of the University of Sydney, Australia, with help from many people over the years. OMIA information is stored in a database that contains textual information and references, as well as links to relevant PubMed and Gene records at the NCBI, and to OMIM and Ensembl. Data breeds notes: OMIA maintains an unpublished list of cat breeds and corresponding OMIA database identification numbers for each breed. For example, the OMIA breed identification number for Abyssinian in the OMIA database is 195. Each cat breed in VBO which is also present in the unpublished list of cat breeds maintained by OMIA, contains the annotation property in VBO database_cross_reference OMIA: breed identification number. Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Online Mendelian Inheritance in Animals (OMIA)"},{"location":"general/sources-cat/#rare-and-exotic-feline-registry-refr","text":"Home page: https://www.rareexoticfelineregistry.com/ Description: The Rare and Exotic Feline Registry was founded in 1984 to promote the responsible development of new breeds of cats. The registry promotes the responsible breeding and health of all felines. The registry recognizes and registers most breeds of cats conforming to uniform breed profiles. Data breeds notes: Breed is defined as a population of cats which have certain physical characteristics in common. These characteristics are outlined in the written breed profile for each breed. Characteristics for breeds available here: https://www.rareexoticfelineregistry.com/breed-recognition/ Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Rare and Exotic Feline Registry (REFR)"},{"location":"general/sources-cat/#the-international-cat-association-tica","text":"Home page: https://www.tica.org/ Description: TICA is the world's largest genetic registry of pedigreed cats, and the world's largest registry of household pets. As the world's largest genetic registry of pedigreed cats, TICA currently recognizes 73 breeds of cats for championship competition. In addition, the number of breeds can change as new breeds are developed. Data breeds notes: Championship Breeds: Breeds of cats who have been accepted for the championship and are recognized as being eligible to compete in TICA sanctioned shows and eligible for appropriate titles and/or computation of Annual Awards. These cats must be 8 months of age or more and may be male, female, neuter or spay. Pedigreed kittens (under 8 months of age) do not earn titles, but are eligible to compete in TICA sanctioned shows and may earn points towards Annual Awards. Non-Championship Breeds: This class consists of Household Pets and Household Pet Kittens. Household pets earn titles comparable to Championship cats and are eligible to compete in TICA sanctioned shows and may earn points towards Annual Awards. Household pet kittens do not earn titles, but are eligible to compete in TICA sanctioned shows and may earn points towards Annual Awards. Advanced New Breeds: The second level of the Championship Advancement Class Program. These breeds are eligible to be shown in TICA sanctioned shows but do not earn titles or points towards Annual Awards and must follow specific rules to be eligible for championship status. Preliminary New Breeds: The beginning level of the Championship Advancement Class Program. These breeds are eligible to be shown in TICA sanctioned shows but do not earn titles or points towards Annual Awards and must follow specific rules to be eligible for the next step in achieving championship status. Characteristics for breeds available here: https://www.tica.org/breeds/browse-all-breeds Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"The International Cat Association (TICA)"},{"location":"general/sources-cat/#wikipedia-list-of-cat-breeds-wiki","text":"Home page: https://en.wikipedia.org/wiki/List_of_cat_breeds#Breeds Description: The following list of cat breeds includes only domestic cat breeds and domestic and wild hybrids. The list includes established breeds recognized by various cat registries, new and experimental breeds, landraces being established as standardized breeds, distinct domestic populations not being actively developed and lapsed (extinct) breeds. Inconsistency in a breed classification and naming among registries means that an individual animal may be considered different breeds by different registries (though not necessarily eligible for registry in them all, depending on its exact ancestry). Data breeds notes: Wikipedia does not report its own recognition status. Characteristics for breeds available here: https://en.wikipedia.org/wiki/List_of_cat_breeds#Breeds Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Wikipedia, List of cat breeds (Wiki)"},{"location":"general/sources-cat/#world-cat-congress-wcc","text":"Home page: https://www.worldcatcongress.org/index.php Description: The object of this Congress is to work openly and honestly together in a spirit of co-operation to improve the health and welfare of all cats and encourage the sharing of resources to promote the interests and to educate the participants of the \u2018Cat Fancy\u2019 throughout the world. Data breeds notes: World Cat Congress does not report its own recognition status, but rather provides a comparison of breed name, recognition status, breed code, allowable outcrosses, recognized colors, breed restrictions and special notes for the member organizations that include CFA, FIFe, GCCF, TICA and WCF. Characteristics of breeds available here: https://www.worldcatcongress.org/wp/cat_breed_comp_aby.php Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"World Cat Congress (WCC)"},{"location":"general/sources-cat/#world-cat-federation-wcf","text":"Home page: https://wcf.de/en/ Description: The WCF is a global operating federation of cat clubs. The WCF is registered as an international federation at the registration court in Germany. Currently 280 associations worldwide are affiliated with the WCF. Data breeds notes: Championship status is granted to all breeds recognized or preliminary recognized by WCF, to all breeds recognized by one WCC Member, and to all breeds recognized by a WCF Cooperation partner. The non-recognized breed category is comprised of Non Recognized Hairless, Non Recognized Shorthair and Non Recognized Longhair. Characteristics of breeds available here: https://wcf.de/en/ Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"World Cat Federation (WCF)"},{"location":"general/sources-dog/","text":"Sources for Dog Breeds American Kennel Club (AKC) Home page: https://www.akc.org/ Description: Founded in 1884, the not-for-profit AKC is the recognized and trusted expert in breed, health, and training information for all dogs. AKC actively advocates for responsible dog ownership and is dedicated to advancing dog sports. Data breeds notes: The AKC standard for each breed originates with a \u201cparent club,\u201d the AKC-recognized national club devoted to a particular breed. Each breed\u2019s ideal physical traits, movement, and temperament are set down in a written document called a \u201cbreed standard.\u201d Once approved by the AKC, a standard becomes both the breeder\u2019s \u201cblueprint\u201d and the instrument used by dog show judges to evaluate a breeder\u2019s work. There are over 340 dog breeds known throughout the world. The American Kennel Club recognizes 199 breeds, which are sorted into 9 groups: Sporting Group, Hound Group, Working Group, Terrier Group, Toy Group, Non-Sporting Group, Herding Group, Miscellaneous Class, and Foundation Stock Service. The Foundation Stock Service\u00ae allows purebred rare breeds to continue to develop while providing them with the security of a reliable and reputable avenue to maintain their records. Foundation Stock Service\u00ae is a requirement for fanciers of a breed who want to achieve full AKC recognition. FSS\u00ae breeds may now compete in Open Shows, Companion Events and Performance Events that AKC determines to be applicable. Breeds must have a breed standard in order to compete.The breeds currently eligible to participate in the Miscellaneous Class are still enrolled in the AKC Foundation Stock Service\u00ae. FSS\u00ae enrollment is maintained until the AKC Board of Directors accepts the breed for regular status. Authorities acknowledge that throughout the world there are several hundred distinct breeds of purebred dogs, not all of which are AKC recognized breeds. Those officially recognized for AKC registration appear in the Stud Book of the American Kennel Club. The AKC provides for a regular path of development for a new breed, which may result in that breed\u2019s full recognition and appearance in the official Stud Book as an AKC recognized breed.https://www.akc.org/dog-breeds/ Data synchronization: The data in VBO coming from this source is currently not regularly updated. Canadian Kennel Club (CKC) Home page: https://www.ckc.ca/en Description: The Canadian Kennel Club (CKC) is the primary registry body for purebred dogs in Canada and currently recognizes 187 breeds. As a non-profit organization, the CKC is dedicated to encouraging, guiding, and advancing the interests of purebred dogs and their responsible owners and breeders in Canada and promoting the knowledge and understanding of the benefits which dogs can bring to Canadian society. Data breeds notes: The CKC recognizes 187 breeds, which are sorted into seven groups: Herding Dogs, Hounds, Non-Sporting Dogs, Sporting Dogs, Terriers, Toy Dogs and Working Dogs. \"Listed\" breeds are in the process of gaining full CKC recognition. https://www.ckc.ca/en/Choosing-a-Dog/Choosing-a-Breed Data synchronization: The data in VBO coming from this source is currently not regularly updated. Domestic Animal Diversity Information (DAD-IS) Home page: https://www.fao.org/dad-is Description: DAD-IS is a list compiled and maintained by the Food and Agriculture Organization of the United Nations (FAO). This list contains information on more than 15,000 national breed populations representing more than 8,800 breeds across 38 species. It is assembled, contributed to, and updated by country-nominated National Coordinators from 182 countries. Data breeds notes: DAD-IS represents 2 types of breeds: \u201clocal breeds\u201d (breeds reported in a single country), and \u201ctransboundary breeds\u201d (breeds reported in several different countries). The instance of \u201ctransboundary breeds\u201d that are reported in specific countries are called in DAD-IS \u201cnational breed populations.\u201d In addition to the breeds' most common name and country of existence, DAD-IS reports on the domestication status, the extinction status of breeds, and the description of origin of the breeds. https://www.fao.org/dad-is Data synchronization: The data in VBO coming from this source is currently not regularly updated. F\u00e9d\u00e9ration Cynologique Internationale (FCI) Home page: https://www.fci.be/en/ Description: The F\u00e9d\u00e9ration Cynologique Internationale is the World Canine Organisation. It includes 98 members and contract partners (one member per country) that each issue their own pedigrees and train their own judges. Data breeds notes: The FCI recognises 356 breeds in 10 groups: Group 1 - Sheepdogs and Cattledogs (except Swiss Cattledogs), Group 2 - Pinscher and Schnauzer - Molossoid and Swiss Mountain and Cattledogs, Group 3 - Terriers, Group 4 - Dachshunds, Group 5 - Spitz and primitive types, Group 6 - Scent hounds and related breeds, Group 7 - Pointing Dogs, Group 8 - Retrievers - Flushing Dogs - Water Dogs, Group 9 - Companion and Toy Dogs, Group 10 - Sighthounds. Each breed is the 'property' of a specific country. The 'owner' countries of the breeds write the standard of these breeds (detailed description of the ideal type of the breed), in co-operation with the Standards and Scientific Commissions of the FCI. The translation, updating and publication of the standards are carried out by the FCI. FCI breeds recognised on a definitive basis are eligible for the CACIB (Certificat d\u2019Aptitude au Championnat International de la FCI) and for the FCI titles (Winner of the World Dog Show, Winner of the Section Shows \u2013 Europe, Asia and the Pacific, Americas and the Caribbean). FCI breeds recognised on a provisional basis are not eligible for the CACIB until they are recognised on a definitive basis, but are eligible for the FCI titles (Winner of the World Dog Show, Winner of the Section Shows \u2013 Europe, Asia and the Pacific, Americas and the Caribbean). In addition, the pedigrees issued to the dogs of these breeds have to carry the FCI logo. https://www.fci.be/en/Nomenclature/ Data synchronization: The data in VBO coming from this source is currently not regularly updated. iDog - National Genomics Data Center Home page: https://ngdc.cncb.ac.cn/idog/ Description: iDog, an integrated resource for domestic dog (Canis lupus familiaris) and wild canids, provides the worldwide dog research community a variety of data services. This includes Genes, Genomes, SNPs, Breed/Disease Traits, Gene Expressions, Single Cell, Dog-Human Homolog Diseases and Literatures. In addition, iDog provides Online tools for performing genomic data visualization and analyses. Data breeds notes: iDog focuses on the Phenotype data integrated from the public resources, makes the unified naming standards to identify each breed, connects the genotype, phenotype and disease information with associated gene items, and provides public and free data services. A total of 481 breeds are manually curated from public resources: 265 AKC breeds, 32 CKC breeds, 111 UKC breeds, 38 FCI breeds, 35 wikipedia breeds. There are 10 breed groups: FSS, Herding Group, Hound Group, Miscellaneous, Non-Sporting Group, Terrier Group, Toy Group, Working Group, and Extinct. https://ngdc.cncb.ac.cn/idog/breed/home Data synchronization: The data in VBO coming from this source is currently not regularly updated. The Kennel Club (KC) Home page: https://www.thekennelclub.org.uk/ Description: The Kennel Club the largest organisation in the UK devoted to dog health, welfare and training. Its objective is to ensure that dogs live healthy, happy lives with responsible owners. The Kennel Club runs the UK's largest registration database for pedigree dogs and an activity register for crossbreed dogs. Data breeds notes: There are 222 recognized breeds in 7 breed groups: Pastoral, Gundog, Hound, Utility, Terrier, Working, and Toy. https://www.thekennelclub.org.uk/search/breeds-a-to-z/ Data synchronization: The data in VBO coming from this source is currently not regularly updated. Swedish Kennel Club (Svenska Kennelklubben, SKK) Home page: https://www.skk.se/en Description: Svenska Kennelklubben, the Swedish kennel club, is Sweden's largest organisation dedicated to dogs and dog owners. SKK represents the interests of 300,000 members \u2013 first time dog owners, experienced breeders, hunters, dog lovers, puppy buyers, exhibitors, agility competitors and many more. SKK promotes the health and welfare of all dogs, and gives support to more than 14,000 active breeders. Data breeds notes: There are 10 breed groups corresponding to the FCI breed groups. https://www.skk.se/en/Dog-health/BSI--Breed-Specific-Instructions/ Data synchronization: This source is not yet available in VBO. United Kennel Club (UKC) Home page: https://www.ukcdogs.com/ Description: A Kalamazoo, Michigan-based company founded in 1898, United Kennel Club is the largest all-breed performance-dog registry in the world, registering dogs from all 50 states and 25 foreign countries. The UKC is an international registry and currently recognizes over 300 separate breeds. Data breeds notes: Each breed was developed for a specific purpose or function. The UKC standards contained herein are intended for use by people already familiar with the breeds they describe, such as responsible breeders and UKC judges. They are not intended for use by other organizations for breed identification and should not be adopted for those or similar purposes, either in part or as a whole. Each breed has its own breed standard. Breeds are assigned to one of 8 Groups based on its past and present function, historical origins and region of development: Companion Dog, Guardian Dog, Gun Dog, Herding Dog, Northern Breed, Scenthound, Sight and Pariah, and Terrier. Breed recognition is a significant landmark for a breed, in that it will become officially recognized by the world's largest performance dog registry. Full recognition entitles a breed to all the benefits of UKC, including, but not limited to, registration and participation in conformation and performance events licensed by the United Kennel Club. Therefore, the United Kennel Club prepared the following Breed Recognition Policies, all of which must be completed in order for a breed to be considered for recognition. Submission of this does not guarantee acceptance. The United Kennel Club does not consider a variation of an existing breed, or a result of a combination of two existing breeds, to be a new and unique breed. This includes, but is not limited to, differences in color, coat type, size or any disqualifications that may exist in the UKC Breed Standard for an existing breed. UKC reserves the right to refuse, correct or revoke any registration at any time. https://www.ukcdogs.com/breeds Data synchronization: The data in VBO coming from this source is currently not regularly updated. Veterinary Nomenclature (VeNom) Home page: https://venomcoding.org/ Description: The canine breed codes currently consist of breeds that are recognised by kennel clubs across the world. Where possible all synonyms of the same breed have been linked in the codes to each other, and are independent of their colour coding unless it is specific to that breed. Similar breeds have been grouped together using standard categories (e.g. Retrievers or Spaniels). The list is very inclusive to ensure all types of dog breeds are covered, and first generation pedigree crosses (such as Labradoodle or Puggle) are also included to assist with data capture. Non-standard cross breed dogs are recorded as synonyms of \u2018Crossbreed\u2019. https://venomcoding.org/venom-codes/ Data breeds notes: Note that not all dogs listed are recognized breeds by an official breed registry that can certify the dog is a purebred. Data synchronization: The data in VBO coming from this source is currently not regularly updated. Wikipedia Home page: https://en.wikipedia.org/wiki/List_of_dog_breeds Description: This list of dog breeds includes both extant and extinct dog breeds, varieties, landraces, and dog types. A research article on dog genomics published in Science/AAAS defines modern dog breeds as \"a recent invention defined by conformation to a physical ideal and purity of lineage.\u201d Data breeds notes: Note that not all dogs listed are recognized breeds by an official breed registry that can certify the dog is a purebred. Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Sources for Dog Breeds"},{"location":"general/sources-dog/#sources-for-dog-breeds","text":"","title":"Sources for Dog Breeds"},{"location":"general/sources-dog/#american-kennel-club-akc","text":"Home page: https://www.akc.org/ Description: Founded in 1884, the not-for-profit AKC is the recognized and trusted expert in breed, health, and training information for all dogs. AKC actively advocates for responsible dog ownership and is dedicated to advancing dog sports. Data breeds notes: The AKC standard for each breed originates with a \u201cparent club,\u201d the AKC-recognized national club devoted to a particular breed. Each breed\u2019s ideal physical traits, movement, and temperament are set down in a written document called a \u201cbreed standard.\u201d Once approved by the AKC, a standard becomes both the breeder\u2019s \u201cblueprint\u201d and the instrument used by dog show judges to evaluate a breeder\u2019s work. There are over 340 dog breeds known throughout the world. The American Kennel Club recognizes 199 breeds, which are sorted into 9 groups: Sporting Group, Hound Group, Working Group, Terrier Group, Toy Group, Non-Sporting Group, Herding Group, Miscellaneous Class, and Foundation Stock Service. The Foundation Stock Service\u00ae allows purebred rare breeds to continue to develop while providing them with the security of a reliable and reputable avenue to maintain their records. Foundation Stock Service\u00ae is a requirement for fanciers of a breed who want to achieve full AKC recognition. FSS\u00ae breeds may now compete in Open Shows, Companion Events and Performance Events that AKC determines to be applicable. Breeds must have a breed standard in order to compete.The breeds currently eligible to participate in the Miscellaneous Class are still enrolled in the AKC Foundation Stock Service\u00ae. FSS\u00ae enrollment is maintained until the AKC Board of Directors accepts the breed for regular status. Authorities acknowledge that throughout the world there are several hundred distinct breeds of purebred dogs, not all of which are AKC recognized breeds. Those officially recognized for AKC registration appear in the Stud Book of the American Kennel Club. The AKC provides for a regular path of development for a new breed, which may result in that breed\u2019s full recognition and appearance in the official Stud Book as an AKC recognized breed.https://www.akc.org/dog-breeds/ Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"American Kennel Club (AKC)"},{"location":"general/sources-dog/#canadian-kennel-club-ckc","text":"Home page: https://www.ckc.ca/en Description: The Canadian Kennel Club (CKC) is the primary registry body for purebred dogs in Canada and currently recognizes 187 breeds. As a non-profit organization, the CKC is dedicated to encouraging, guiding, and advancing the interests of purebred dogs and their responsible owners and breeders in Canada and promoting the knowledge and understanding of the benefits which dogs can bring to Canadian society. Data breeds notes: The CKC recognizes 187 breeds, which are sorted into seven groups: Herding Dogs, Hounds, Non-Sporting Dogs, Sporting Dogs, Terriers, Toy Dogs and Working Dogs. \"Listed\" breeds are in the process of gaining full CKC recognition. https://www.ckc.ca/en/Choosing-a-Dog/Choosing-a-Breed Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Canadian Kennel Club (CKC)"},{"location":"general/sources-dog/#domestic-animal-diversity-information-dad-is","text":"Home page: https://www.fao.org/dad-is Description: DAD-IS is a list compiled and maintained by the Food and Agriculture Organization of the United Nations (FAO). This list contains information on more than 15,000 national breed populations representing more than 8,800 breeds across 38 species. It is assembled, contributed to, and updated by country-nominated National Coordinators from 182 countries. Data breeds notes: DAD-IS represents 2 types of breeds: \u201clocal breeds\u201d (breeds reported in a single country), and \u201ctransboundary breeds\u201d (breeds reported in several different countries). The instance of \u201ctransboundary breeds\u201d that are reported in specific countries are called in DAD-IS \u201cnational breed populations.\u201d In addition to the breeds' most common name and country of existence, DAD-IS reports on the domestication status, the extinction status of breeds, and the description of origin of the breeds. https://www.fao.org/dad-is Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Domestic Animal Diversity Information (DAD-IS)"},{"location":"general/sources-dog/#federation-cynologique-internationale-fci","text":"Home page: https://www.fci.be/en/ Description: The F\u00e9d\u00e9ration Cynologique Internationale is the World Canine Organisation. It includes 98 members and contract partners (one member per country) that each issue their own pedigrees and train their own judges. Data breeds notes: The FCI recognises 356 breeds in 10 groups: Group 1 - Sheepdogs and Cattledogs (except Swiss Cattledogs), Group 2 - Pinscher and Schnauzer - Molossoid and Swiss Mountain and Cattledogs, Group 3 - Terriers, Group 4 - Dachshunds, Group 5 - Spitz and primitive types, Group 6 - Scent hounds and related breeds, Group 7 - Pointing Dogs, Group 8 - Retrievers - Flushing Dogs - Water Dogs, Group 9 - Companion and Toy Dogs, Group 10 - Sighthounds. Each breed is the 'property' of a specific country. The 'owner' countries of the breeds write the standard of these breeds (detailed description of the ideal type of the breed), in co-operation with the Standards and Scientific Commissions of the FCI. The translation, updating and publication of the standards are carried out by the FCI. FCI breeds recognised on a definitive basis are eligible for the CACIB (Certificat d\u2019Aptitude au Championnat International de la FCI) and for the FCI titles (Winner of the World Dog Show, Winner of the Section Shows \u2013 Europe, Asia and the Pacific, Americas and the Caribbean). FCI breeds recognised on a provisional basis are not eligible for the CACIB until they are recognised on a definitive basis, but are eligible for the FCI titles (Winner of the World Dog Show, Winner of the Section Shows \u2013 Europe, Asia and the Pacific, Americas and the Caribbean). In addition, the pedigrees issued to the dogs of these breeds have to carry the FCI logo. https://www.fci.be/en/Nomenclature/ Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"F\u00e9d\u00e9ration Cynologique Internationale (FCI)"},{"location":"general/sources-dog/#idog-national-genomics-data-center","text":"Home page: https://ngdc.cncb.ac.cn/idog/ Description: iDog, an integrated resource for domestic dog (Canis lupus familiaris) and wild canids, provides the worldwide dog research community a variety of data services. This includes Genes, Genomes, SNPs, Breed/Disease Traits, Gene Expressions, Single Cell, Dog-Human Homolog Diseases and Literatures. In addition, iDog provides Online tools for performing genomic data visualization and analyses. Data breeds notes: iDog focuses on the Phenotype data integrated from the public resources, makes the unified naming standards to identify each breed, connects the genotype, phenotype and disease information with associated gene items, and provides public and free data services. A total of 481 breeds are manually curated from public resources: 265 AKC breeds, 32 CKC breeds, 111 UKC breeds, 38 FCI breeds, 35 wikipedia breeds. There are 10 breed groups: FSS, Herding Group, Hound Group, Miscellaneous, Non-Sporting Group, Terrier Group, Toy Group, Working Group, and Extinct. https://ngdc.cncb.ac.cn/idog/breed/home Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"iDog - National Genomics Data Center"},{"location":"general/sources-dog/#the-kennel-club-kc","text":"Home page: https://www.thekennelclub.org.uk/ Description: The Kennel Club the largest organisation in the UK devoted to dog health, welfare and training. Its objective is to ensure that dogs live healthy, happy lives with responsible owners. The Kennel Club runs the UK's largest registration database for pedigree dogs and an activity register for crossbreed dogs. Data breeds notes: There are 222 recognized breeds in 7 breed groups: Pastoral, Gundog, Hound, Utility, Terrier, Working, and Toy. https://www.thekennelclub.org.uk/search/breeds-a-to-z/ Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"The Kennel Club (KC)"},{"location":"general/sources-dog/#swedish-kennel-club-svenska-kennelklubben-skk","text":"Home page: https://www.skk.se/en Description: Svenska Kennelklubben, the Swedish kennel club, is Sweden's largest organisation dedicated to dogs and dog owners. SKK represents the interests of 300,000 members \u2013 first time dog owners, experienced breeders, hunters, dog lovers, puppy buyers, exhibitors, agility competitors and many more. SKK promotes the health and welfare of all dogs, and gives support to more than 14,000 active breeders. Data breeds notes: There are 10 breed groups corresponding to the FCI breed groups. https://www.skk.se/en/Dog-health/BSI--Breed-Specific-Instructions/ Data synchronization: This source is not yet available in VBO.","title":"Swedish Kennel Club (Svenska Kennelklubben, SKK)"},{"location":"general/sources-dog/#united-kennel-club-ukc","text":"Home page: https://www.ukcdogs.com/ Description: A Kalamazoo, Michigan-based company founded in 1898, United Kennel Club is the largest all-breed performance-dog registry in the world, registering dogs from all 50 states and 25 foreign countries. The UKC is an international registry and currently recognizes over 300 separate breeds. Data breeds notes: Each breed was developed for a specific purpose or function. The UKC standards contained herein are intended for use by people already familiar with the breeds they describe, such as responsible breeders and UKC judges. They are not intended for use by other organizations for breed identification and should not be adopted for those or similar purposes, either in part or as a whole. Each breed has its own breed standard. Breeds are assigned to one of 8 Groups based on its past and present function, historical origins and region of development: Companion Dog, Guardian Dog, Gun Dog, Herding Dog, Northern Breed, Scenthound, Sight and Pariah, and Terrier. Breed recognition is a significant landmark for a breed, in that it will become officially recognized by the world's largest performance dog registry. Full recognition entitles a breed to all the benefits of UKC, including, but not limited to, registration and participation in conformation and performance events licensed by the United Kennel Club. Therefore, the United Kennel Club prepared the following Breed Recognition Policies, all of which must be completed in order for a breed to be considered for recognition. Submission of this does not guarantee acceptance. The United Kennel Club does not consider a variation of an existing breed, or a result of a combination of two existing breeds, to be a new and unique breed. This includes, but is not limited to, differences in color, coat type, size or any disqualifications that may exist in the UKC Breed Standard for an existing breed. UKC reserves the right to refuse, correct or revoke any registration at any time. https://www.ukcdogs.com/breeds Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"United Kennel Club (UKC)"},{"location":"general/sources-dog/#veterinary-nomenclature-venom","text":"Home page: https://venomcoding.org/ Description: The canine breed codes currently consist of breeds that are recognised by kennel clubs across the world. Where possible all synonyms of the same breed have been linked in the codes to each other, and are independent of their colour coding unless it is specific to that breed. Similar breeds have been grouped together using standard categories (e.g. Retrievers or Spaniels). The list is very inclusive to ensure all types of dog breeds are covered, and first generation pedigree crosses (such as Labradoodle or Puggle) are also included to assist with data capture. Non-standard cross breed dogs are recorded as synonyms of \u2018Crossbreed\u2019. https://venomcoding.org/venom-codes/ Data breeds notes: Note that not all dogs listed are recognized breeds by an official breed registry that can certify the dog is a purebred. Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Veterinary Nomenclature (VeNom)"},{"location":"general/sources-dog/#wikipedia","text":"Home page: https://en.wikipedia.org/wiki/List_of_dog_breeds Description: This list of dog breeds includes both extant and extinct dog breeds, varieties, landraces, and dog types. A research article on dog genomics published in Science/AAAS defines modern dog breeds as \"a recent invention defined by conformation to a physical ideal and purity of lineage.\u201d Data breeds notes: Note that not all dogs listed are recognized breeds by an official breed registry that can certify the dog is a purebred. Data synchronization: The data in VBO coming from this source is currently not regularly updated.","title":"Wikipedia"},{"location":"general/sources-livestock/","text":"Sources for Livestock Breeds Domestic Animal Diversity Information (DAD-IS) Home page: https://www.fao.org/dad-is Description: DAD-IS is a list compiled and maintained by the Food and Agriculture Organization of the United Nations (FAO). This list contains information on more than 15,000 national breed populations representing more than 8,800 breeds across 38 species. It is assembled, contributed to, updated, and maintained by country-nominated National Coordinators from 182 countries. The goal of DAD-IS is the Management of Animal Genetic Resources, focusing on diversity of livestock breeds on national, regional and global levels including the status of breeds regarding their risk of extinction. Data breeds notes: Because of the specific goal of DAD-IS and how it is maintained, breeds and breed information are specific to these breeds\u2019 country localization as reported by the National Coordinators. DAD-IS makes the distinction between 2 types of breeds: \u201clocal breeds\u201d (breeds reported in a single country), and \u201ctransboundary breeds\u201d (breeds reported in several different countries). The instance of a \u201ctransboundary breed\u201d that are reported in specific countries is called in DAD-IS \u201cnational breed populations\u201d. Breeds in the DAD-IS list (except for the \u201ctransboundary\u201d breeds) therefore represent instances of breeds located in a specific country as reported by the National Coordinators. This concept is specific to DAD-IS, and is represented accordingly in VBO as \u201cbreed located_in a specific country\u201d. VBO users should be aware of this concept, as they are unique to DAD-IS and rarely used in other contexts. Data synchronization: the data in VBO coming from this source is currently not regularly updated. Livestock Breeds - Livestock Breed Ontology (LBO) Home page: https://www.animalgenome.org/bioinfo/projects/lbo/ Description: LBO is a controlled, publicly available and regularly updated and released vocabulary for the unambiguous description of buffalo, cattle, chicken, goat, horse, pig, and sheep breeds. Its utility includes proper identification of inherited variation sources in genetics/genomic studies. There are currently 1,129 classes in LBO. LBO metadata includes synonyms and description of origin. Data breeds notes: LBO terms were included in VBO as database cross-references. Data synchronization: the data in VBO coming from this source is currently not regularly updated.","title":"Sources for Livestock Breeds"},{"location":"general/sources-livestock/#sources-for-livestock-breeds","text":"","title":"Sources for Livestock Breeds"},{"location":"general/sources-livestock/#domestic-animal-diversity-information-dad-is","text":"Home page: https://www.fao.org/dad-is Description: DAD-IS is a list compiled and maintained by the Food and Agriculture Organization of the United Nations (FAO). This list contains information on more than 15,000 national breed populations representing more than 8,800 breeds across 38 species. It is assembled, contributed to, updated, and maintained by country-nominated National Coordinators from 182 countries. The goal of DAD-IS is the Management of Animal Genetic Resources, focusing on diversity of livestock breeds on national, regional and global levels including the status of breeds regarding their risk of extinction. Data breeds notes: Because of the specific goal of DAD-IS and how it is maintained, breeds and breed information are specific to these breeds\u2019 country localization as reported by the National Coordinators. DAD-IS makes the distinction between 2 types of breeds: \u201clocal breeds\u201d (breeds reported in a single country), and \u201ctransboundary breeds\u201d (breeds reported in several different countries). The instance of a \u201ctransboundary breed\u201d that are reported in specific countries is called in DAD-IS \u201cnational breed populations\u201d. Breeds in the DAD-IS list (except for the \u201ctransboundary\u201d breeds) therefore represent instances of breeds located in a specific country as reported by the National Coordinators. This concept is specific to DAD-IS, and is represented accordingly in VBO as \u201cbreed located_in a specific country\u201d. VBO users should be aware of this concept, as they are unique to DAD-IS and rarely used in other contexts. Data synchronization: the data in VBO coming from this source is currently not regularly updated.","title":"Domestic Animal Diversity Information (DAD-IS)"},{"location":"general/sources-livestock/#livestock-breeds-livestock-breed-ontology-lbo","text":"Home page: https://www.animalgenome.org/bioinfo/projects/lbo/ Description: LBO is a controlled, publicly available and regularly updated and released vocabulary for the unambiguous description of buffalo, cattle, chicken, goat, horse, pig, and sheep breeds. Its utility includes proper identification of inherited variation sources in genetics/genomic studies. There are currently 1,129 classes in LBO. LBO metadata includes synonyms and description of origin. Data breeds notes: LBO terms were included in VBO as database cross-references. Data synchronization: the data in VBO coming from this source is currently not regularly updated.","title":"Livestock Breeds - Livestock Breed Ontology (LBO)"},{"location":"general/users/","text":"VBO Users and Use Cases Documentation coming up","title":"VBO Users and Use cases"},{"location":"general/users/#vbo-users-and-use-cases","text":"Documentation coming up","title":"VBO Users and Use Cases"},{"location":"howto/howtouse/","text":"How to use VBO for data annotations Documentation coming up","title":"Use VBO for data annotation"},{"location":"howto/howtouse/#how-to-use-vbo-for-data-annotations","text":"Documentation coming up","title":"How to use VBO for data annotations"},{"location":"odk-workflows/","text":"Default ODK Workflows Daily Editors Workflow Release Workflow Manage your ODK Repository Setting up Docker for ODK Imports management Managing the documentation Managing your Automated Testing","title":"Overview"},{"location":"odk-workflows/#default-odk-workflows","text":"Daily Editors Workflow Release Workflow Manage your ODK Repository Setting up Docker for ODK Imports management Managing the documentation Managing your Automated Testing","title":"Default ODK Workflows"},{"location":"odk-workflows/ContinuousIntegration/","text":"Introduction to Continuous Integration Workflows with ODK Historically, most repos have been using Travis CI for continuous integration testing and building, but due to runtime restrictions, we recently switched a lot of our repos to GitHub actions. You can set up your repo with CI by adding this to your configuration file (src/ontology/vbo-odk.yaml): ci: - github_actions When updateing your repo , you will notice a new file being added: .github/workflows/qc.yml . This file contains your CI logic, so if you need to change, or add anything, this is the place! Alternatively, if your repo is in GitLab instead of GitHub, you can set up your repo with GitLab CI by adding this to your configuration file (src/ontology/vbo-odk.yaml): ci: - gitlab-ci This will add a file called .gitlab-ci.yml in the root of your repo.","title":"Continuous Integration"},{"location":"odk-workflows/ContinuousIntegration/#introduction-to-continuous-integration-workflows-with-odk","text":"Historically, most repos have been using Travis CI for continuous integration testing and building, but due to runtime restrictions, we recently switched a lot of our repos to GitHub actions. You can set up your repo with CI by adding this to your configuration file (src/ontology/vbo-odk.yaml): ci: - github_actions When updateing your repo , you will notice a new file being added: .github/workflows/qc.yml . This file contains your CI logic, so if you need to change, or add anything, this is the place! Alternatively, if your repo is in GitLab instead of GitHub, you can set up your repo with GitLab CI by adding this to your configuration file (src/ontology/vbo-odk.yaml): ci: - gitlab-ci This will add a file called .gitlab-ci.yml in the root of your repo.","title":"Introduction to Continuous Integration Workflows with ODK"},{"location":"odk-workflows/EditorsWorkflow/","text":"Editors Workflow The editors workflow is one of the formal workflows to ensure that the ontology is developed correctly according to ontology engineering principles. There are a few different editors workflows: Local editing workflow: Editing the ontology in your local environment by hand, using tools such as Prot\u00e9g\u00e9, ROBOT templates or DOSDP patterns. Completely automated data pipeline (GitHub Actions) DROID workflow This document only covers the first editing workflow, but more will be added in the future Local editing workflow Workflow requirements: git github docker editing tool of choice, e.g. Prot\u00e9g\u00e9, your favourite text editor, etc 1. Create issue Ensure that there is a ticket on your issue tracker that describes the change you are about to make. While this seems optional, this is a very important part of the social contract of building an ontology - no change to the ontology should be performed without a good ticket, describing the motivation and nature of the intended change. 2. Update main branch In your local environment (e.g. your laptop), make sure you are on the main (prev. master ) branch and ensure that you have all the upstream changes, for example: git checkout master git pull 3. Create feature branch Create a new branch. Per convention, we try to use meaningful branch names such as: - issue23removeprocess (where issue 23 is the related issue on GitHub) - issue26addcontributor - release20210101 (for releases) On your command line, this looks like this: git checkout -b issue23removeprocess 4. Perform edit Using your editor of choice, perform the intended edit. For example: Prot\u00e9g\u00e9 Open src/ontology/vbo-edit.owl in Prot\u00e9g\u00e9 Make the change Save the file TextEdit Open src/ontology/vbo-edit.owl in TextEdit (or Sublime, Atom, Vim, Nano) Make the change Save the file Consider the following when making the edit. According to our development philosophy, the only places that should be manually edited are: src/ontology/vbo-edit.owl Any ROBOT templates you chose to use (the TSV files only) Any DOSDP data tables you chose to use (the TSV files, and potentially the associated patterns) components (anything in src/ontology/components ), see here . Imports should not be edited (any edits will be flushed out with the next update). However, refreshing imports is a potentially breaking change - and is discussed elsewhere . Changes should usually be small. Adding or changing 1 term is great. Adding or changing 10 related terms is ok. Adding or changing 100 or more terms at once should be considered very carefully. 4. Check the Git diff This step is very important. Rather than simply trusting your change had the intended effect, we should always use a git diff as a first pass for sanity checking. In our experience, having a visual git client like GitHub Desktop or sourcetree is really helpful for this part. In case you prefer the command line: git status git diff 5. Quality control Now it's time to run your quality control checks. This can either happen locally ( 5a ) or through your continuous integration system ( 7/5b ). 5a. Local testing If you chose to run your test locally: sh run.sh make IMP=false test This will run the whole set of configured ODK tests on including your change. If you have a complex DOSDP pattern pipeline you may want to add PAT=false to skip the potentially lengthy process of rebuilding the patterns. sh run.sh make IMP=false PAT=false test 6. Pull request When you are happy with the changes, you commit your changes to your feature branch, push them upstream (to GitHub) and create a pull request. For example: git add NAMEOFCHANGEDFILES git commit -m \"Added biological process term #12\" git push -u origin issue23removeprocess Then you go to your project on GitHub, and create a new pull request from the branch, for example: https://github.com/INCATools/ontology-development-kit/pulls There is a lot of great advise on how to write pull requests, but at the very least you should: - mention the tickets affected: see #23 to link to a related ticket, or fixes #23 if, by merging this pull request, the ticket is fixed. Tickets in the latter case will be closed automatically by GitHub when the pull request is merged. - summarise the changes in a few sentences. Consider the reviewer: what would they want to know right away. - If the diff is large, provide instructions on how to review the pull request best (sometimes, there are many changed files, but only one important change). 7/5b. Continuous Integration Testing If you didn't run and local quality control checks (see 5a ), you should have Continuous Integration (CI) set up, for example: - Travis - GitHub Actions More on how to set this up here . Once the pull request is created, the CI will automatically trigger. If all is fine, it will show up green, otherwise red. 8. Community review Once all the automatic tests have passed, it is important to put a second set of eyes on the pull request. Ontologies are inherently social - as in that they represent some kind of community consensus on how a domain is organised conceptually. This seems high brow talk, but it is very important that as an ontology editor, you have your work validated by the community you are trying to serve (e.g. your colleagues, other contributors etc.). In our experience, it is hard to get more than one review on a pull request - two is great. You can set up GitHub branch protection to actually require a review before a pull request can be merged! We recommend this. This step seems daunting to some hopefully under-resourced ontologies, but we recommend to put this high up on your list of priorities - train a colleague, reach out! 9. Merge and cleanup When the QC is green and the reviews are in (approvals), it is time to merge the pull request. After the pull request is merged, remember to delete the branch as well (this option will show up as a big button right after you have merged the pull request). If you have not done so, close all the associated tickets fixed by the pull request. 10. Changelog (Optional) It is sometimes difficult to keep track of changes made to an ontology. Some ontology teams opt to document changes in a changelog (simply a text file in your repository) so that when release day comes, you know everything you have changed. This is advisable at least for major changes (such as a new release system, a new pattern or template etc.).","title":"Editors Workflow"},{"location":"odk-workflows/EditorsWorkflow/#editors-workflow","text":"The editors workflow is one of the formal workflows to ensure that the ontology is developed correctly according to ontology engineering principles. There are a few different editors workflows: Local editing workflow: Editing the ontology in your local environment by hand, using tools such as Prot\u00e9g\u00e9, ROBOT templates or DOSDP patterns. Completely automated data pipeline (GitHub Actions) DROID workflow This document only covers the first editing workflow, but more will be added in the future","title":"Editors Workflow"},{"location":"odk-workflows/EditorsWorkflow/#local-editing-workflow","text":"Workflow requirements: git github docker editing tool of choice, e.g. Prot\u00e9g\u00e9, your favourite text editor, etc","title":"Local editing workflow"},{"location":"odk-workflows/EditorsWorkflow/#1-create-issue","text":"Ensure that there is a ticket on your issue tracker that describes the change you are about to make. While this seems optional, this is a very important part of the social contract of building an ontology - no change to the ontology should be performed without a good ticket, describing the motivation and nature of the intended change.","title":"1. Create issue"},{"location":"odk-workflows/EditorsWorkflow/#2-update-main-branch","text":"In your local environment (e.g. your laptop), make sure you are on the main (prev. master ) branch and ensure that you have all the upstream changes, for example: git checkout master git pull","title":"2. Update main branch"},{"location":"odk-workflows/EditorsWorkflow/#3-create-feature-branch","text":"Create a new branch. Per convention, we try to use meaningful branch names such as: - issue23removeprocess (where issue 23 is the related issue on GitHub) - issue26addcontributor - release20210101 (for releases) On your command line, this looks like this: git checkout -b issue23removeprocess","title":"3. Create feature branch"},{"location":"odk-workflows/EditorsWorkflow/#4-perform-edit","text":"Using your editor of choice, perform the intended edit. For example: Prot\u00e9g\u00e9 Open src/ontology/vbo-edit.owl in Prot\u00e9g\u00e9 Make the change Save the file TextEdit Open src/ontology/vbo-edit.owl in TextEdit (or Sublime, Atom, Vim, Nano) Make the change Save the file Consider the following when making the edit. According to our development philosophy, the only places that should be manually edited are: src/ontology/vbo-edit.owl Any ROBOT templates you chose to use (the TSV files only) Any DOSDP data tables you chose to use (the TSV files, and potentially the associated patterns) components (anything in src/ontology/components ), see here . Imports should not be edited (any edits will be flushed out with the next update). However, refreshing imports is a potentially breaking change - and is discussed elsewhere . Changes should usually be small. Adding or changing 1 term is great. Adding or changing 10 related terms is ok. Adding or changing 100 or more terms at once should be considered very carefully.","title":"4. Perform edit"},{"location":"odk-workflows/EditorsWorkflow/#4-check-the-git-diff","text":"This step is very important. Rather than simply trusting your change had the intended effect, we should always use a git diff as a first pass for sanity checking. In our experience, having a visual git client like GitHub Desktop or sourcetree is really helpful for this part. In case you prefer the command line: git status git diff","title":"4. Check the Git diff"},{"location":"odk-workflows/EditorsWorkflow/#5-quality-control","text":"Now it's time to run your quality control checks. This can either happen locally ( 5a ) or through your continuous integration system ( 7/5b ).","title":"5. Quality control"},{"location":"odk-workflows/EditorsWorkflow/#5a-local-testing","text":"If you chose to run your test locally: sh run.sh make IMP=false test This will run the whole set of configured ODK tests on including your change. If you have a complex DOSDP pattern pipeline you may want to add PAT=false to skip the potentially lengthy process of rebuilding the patterns. sh run.sh make IMP=false PAT=false test","title":"5a. Local testing"},{"location":"odk-workflows/EditorsWorkflow/#6-pull-request","text":"When you are happy with the changes, you commit your changes to your feature branch, push them upstream (to GitHub) and create a pull request. For example: git add NAMEOFCHANGEDFILES git commit -m \"Added biological process term #12\" git push -u origin issue23removeprocess Then you go to your project on GitHub, and create a new pull request from the branch, for example: https://github.com/INCATools/ontology-development-kit/pulls There is a lot of great advise on how to write pull requests, but at the very least you should: - mention the tickets affected: see #23 to link to a related ticket, or fixes #23 if, by merging this pull request, the ticket is fixed. Tickets in the latter case will be closed automatically by GitHub when the pull request is merged. - summarise the changes in a few sentences. Consider the reviewer: what would they want to know right away. - If the diff is large, provide instructions on how to review the pull request best (sometimes, there are many changed files, but only one important change).","title":"6. Pull request"},{"location":"odk-workflows/EditorsWorkflow/#75b-continuous-integration-testing","text":"If you didn't run and local quality control checks (see 5a ), you should have Continuous Integration (CI) set up, for example: - Travis - GitHub Actions More on how to set this up here . Once the pull request is created, the CI will automatically trigger. If all is fine, it will show up green, otherwise red.","title":"7/5b. Continuous Integration Testing"},{"location":"odk-workflows/EditorsWorkflow/#8-community-review","text":"Once all the automatic tests have passed, it is important to put a second set of eyes on the pull request. Ontologies are inherently social - as in that they represent some kind of community consensus on how a domain is organised conceptually. This seems high brow talk, but it is very important that as an ontology editor, you have your work validated by the community you are trying to serve (e.g. your colleagues, other contributors etc.). In our experience, it is hard to get more than one review on a pull request - two is great. You can set up GitHub branch protection to actually require a review before a pull request can be merged! We recommend this. This step seems daunting to some hopefully under-resourced ontologies, but we recommend to put this high up on your list of priorities - train a colleague, reach out!","title":"8. Community review"},{"location":"odk-workflows/EditorsWorkflow/#9-merge-and-cleanup","text":"When the QC is green and the reviews are in (approvals), it is time to merge the pull request. After the pull request is merged, remember to delete the branch as well (this option will show up as a big button right after you have merged the pull request). If you have not done so, close all the associated tickets fixed by the pull request.","title":"9. Merge and cleanup"},{"location":"odk-workflows/EditorsWorkflow/#10-changelog-optional","text":"It is sometimes difficult to keep track of changes made to an ontology. Some ontology teams opt to document changes in a changelog (simply a text file in your repository) so that when release day comes, you know everything you have changed. This is advisable at least for major changes (such as a new release system, a new pattern or template etc.).","title":"10. Changelog (Optional)"},{"location":"odk-workflows/ManageDocumentation/","text":"Updating the Documentation The documentation for VBO is managed in two places (relative to the repository root): The docs directory contains all the files that pertain to the content of the documentation (more below) the mkdocs.yaml file contains the documentation config, in particular its navigation bar and theme. The documentation is hosted using GitHub pages, on a special branch of the repository (called gh-pages ). It is important that this branch is never deleted - it contains all the files GitHub pages needs to render and deploy the site. It is also important to note that the gh-pages branch should never be edited manually . All changes to the docs happen inside the docs directory on the main branch. Editing the docs Changing content All the documentation is contained in the docs directory, and is managed in Markdown . Markdown is a very simple and convenient way to produce text documents with formatting instructions, and is very easy to learn - it is also used, for example, in GitHub issues. This is a normal editing workflow: Open the .md file you want to change in an editor of choice (a simple text editor is often best). IMPORTANT : Do not edit any files in the docs/odk-workflows/ directory. These files are managed by the ODK system and will be overwritten when the repository is upgraded! If you wish to change these files, make an issue on the ODK issue tracker . Perform the edit and save the file Commit the file to a branch, and create a pull request as usual. If your development team likes your changes, merge the docs into master branch. Deploy the documentation (see below) Deploy the documentation The documentation is not automatically updated from the Markdown, and needs to be deployed deliberately. To do this, perform the following steps: In your terminal, navigate to the edit directory of your ontology, e.g.: cd vbo/src/ontology Now you are ready to build the docs as follows: sh run.sh make update_docs Mkdocs now sets off to build the site from the markdown pages. You will be asked to Enter your username Enter your password (see here for using GitHub access tokens instead) IMPORTANT : Using password based authentication will be deprecated this year (2021). Make sure you read up on personal access tokens if that happens! If everything was successful, you will see a message similar to this one: INFO - Your documentation should shortly be available at: https://monarch-initiative.github.io/vertebrate-breed-ontology/ 3. Just to double check, you can now navigate to your documentation pages (usually https://monarch-initiative.github.io/vertebrate-breed-ontology/). Just make sure you give GitHub 2-5 minutes to build the pages!","title":"Managing the documentation"},{"location":"odk-workflows/ManageDocumentation/#updating-the-documentation","text":"The documentation for VBO is managed in two places (relative to the repository root): The docs directory contains all the files that pertain to the content of the documentation (more below) the mkdocs.yaml file contains the documentation config, in particular its navigation bar and theme. The documentation is hosted using GitHub pages, on a special branch of the repository (called gh-pages ). It is important that this branch is never deleted - it contains all the files GitHub pages needs to render and deploy the site. It is also important to note that the gh-pages branch should never be edited manually . All changes to the docs happen inside the docs directory on the main branch.","title":"Updating the Documentation"},{"location":"odk-workflows/ManageDocumentation/#editing-the-docs","text":"","title":"Editing the docs"},{"location":"odk-workflows/ManageDocumentation/#changing-content","text":"All the documentation is contained in the docs directory, and is managed in Markdown . Markdown is a very simple and convenient way to produce text documents with formatting instructions, and is very easy to learn - it is also used, for example, in GitHub issues. This is a normal editing workflow: Open the .md file you want to change in an editor of choice (a simple text editor is often best). IMPORTANT : Do not edit any files in the docs/odk-workflows/ directory. These files are managed by the ODK system and will be overwritten when the repository is upgraded! If you wish to change these files, make an issue on the ODK issue tracker . Perform the edit and save the file Commit the file to a branch, and create a pull request as usual. If your development team likes your changes, merge the docs into master branch. Deploy the documentation (see below)","title":"Changing content"},{"location":"odk-workflows/ManageDocumentation/#deploy-the-documentation","text":"The documentation is not automatically updated from the Markdown, and needs to be deployed deliberately. To do this, perform the following steps: In your terminal, navigate to the edit directory of your ontology, e.g.: cd vbo/src/ontology Now you are ready to build the docs as follows: sh run.sh make update_docs Mkdocs now sets off to build the site from the markdown pages. You will be asked to Enter your username Enter your password (see here for using GitHub access tokens instead) IMPORTANT : Using password based authentication will be deprecated this year (2021). Make sure you read up on personal access tokens if that happens! If everything was successful, you will see a message similar to this one: INFO - Your documentation should shortly be available at: https://monarch-initiative.github.io/vertebrate-breed-ontology/ 3. Just to double check, you can now navigate to your documentation pages (usually https://monarch-initiative.github.io/vertebrate-breed-ontology/). Just make sure you give GitHub 2-5 minutes to build the pages!","title":"Deploy the documentation"},{"location":"odk-workflows/ReleaseWorkflow/","text":"The release workflow The release workflow recommended by the ODK is based on GitHub releases and works as follows: Run a release with the ODK Review the release Merge to main branch Create a GitHub release These steps are outlined in detail in the following. Run a release with the ODK Preparation: Ensure that all your pull requests are merged into your main (master) branch Make sure that all changes to master are committed to GitHub ( git status should say that there are no modified files) Locally make sure you have the latest changes from master ( git pull ) Checkout a new branch (e.g. git checkout -b release-2021-01-01 ) You may or may not want to refresh your imports as part of your release strategy (see here ) Make sure you have the latest ODK installed by running docker pull obolibrary/odkfull To actually run the release, you: Open a command line terminal window and navigate to the src/ontology directory ( cd vbo/src/ontology ) Run release pipeline: sh run.sh make prepare_release -B . Note that for some ontologies, this process can take up to 90 minutes - especially if there are large ontologies you depend on, like PRO or CHEBI. If everything went well, you should see the following output on your machine: Release files are now in ../.. - now you should commit, push and make a release on your git hosting site such as GitHub or GitLab . This will create all the specified release targets (OBO, OWL, JSON, and the variants, ont-full and ont-base) and copy them into your release directory (the top level of your repo). Review the release (Optional) Rough check. This step is frequently skipped, but for the more paranoid among us (like the author of this doc), this is a 3 minute additional effort for some peace of mind. Open the main release (vbo.owl) in you favourite development environment (i.e. Prot\u00e9g\u00e9) and eyeball the hierarchy. We recommend two simple checks: Does the very top level of the hierarchy look ok? This means that all new terms have been imported/updated correctly. Does at least one change that you know should be in this release appear? For example, a new class. This means that the release was actually based on the recent edit file. Commit your changes to the branch and make a pull request In your GitHub pull request, review the following three files in detail (based on our experience): vbo.obo - this reflects a useful subset of the whole ontology (everything that can be covered by OBO format). OBO format has that speaking for it: it is very easy to review! vbo-base.owl - this reflects the asserted axioms in your ontology that you have actually edited. Ideally also take a look at vbo-full.owl , which may reveal interesting new inferences you did not know about. Note that the diff of this file is sometimes quite large. Like with every pull request, we recommend to always employ a second set of eyes when reviewing a PR! Merge the main branch Once your CI checks have passed, and your reviews are completed, you can now merge the branch into your main branch (don't forget to delete the branch afterwards - a big button will appear after the merge is finished). Create a GitHub release Go to your releases page on GitHub by navigating to your repository, and then clicking on releases (usually on the right, for example: https://github.com/monarch-initiative/vertebrate-breed-ontology/releases). Then click \"Draft new release\" As the tag version you need to choose the date on which your ontologies were build. You can find this, for example, by looking at the vbo.obo file and check the data-version: property. The date needs to be prefixed with a v , so, for example v2020-02-06 . You can write whatever you want in the release title, but we typically write the date again. The description underneath should contain a concise list of changes or term additions. Click \"Publish release\". Done. Debugging typical ontology release problems Problems with memory When you are dealing with large ontologies, you need a lot of memory. When you see error messages relating to large ontologies such as CHEBI, PRO, NCBITAXON, or Uberon, you should think of memory first, see here . Problems when using OBO format based tools Sometimes you will get cryptic error messages when using legacy tools using OBO format, such as the ontology release tool (OORT), which is also available as part of the ODK docker container. In these cases, you need to track down what axiom or annotation actually caused the breakdown. In our experience (in about 60% of the cases) the problem lies with duplicate annotations ( def , comment ) which are illegal in OBO. Here is an example recipe of how to deal with such a problem: If you get a message like make: *** [cl.Makefile:84: oort] Error 255 you might have a OORT error. To debug this, in your terminal enter sh run.sh make IMP=false PAT=false oort -B (assuming you are already in the ontology folder in your directory) This should show you where the error is in the log (eg multiple different definitions) WARNING: THE FIX BELOW IS NOT IDEAL, YOU SHOULD ALWAYS TRY TO FIX UPSTREAM IF POSSIBLE Open vbo-edit.owl in Prot\u00e9g\u00e9 and find the offending term and delete all offending issue (e.g. delete ALL definition, if the problem was \"multiple def tags not allowed\") and save. *While this is not idea, as it will remove all definitions from that term, it will be added back again when the term is fixed in the ontology it was imported from and added back in. Rerun sh run.sh make IMP=false PAT=false oort -B and if it all passes, commit your changes to a branch and make a pull request as usual.","title":"Release Workflow"},{"location":"odk-workflows/ReleaseWorkflow/#the-release-workflow","text":"The release workflow recommended by the ODK is based on GitHub releases and works as follows: Run a release with the ODK Review the release Merge to main branch Create a GitHub release These steps are outlined in detail in the following.","title":"The release workflow"},{"location":"odk-workflows/ReleaseWorkflow/#run-a-release-with-the-odk","text":"Preparation: Ensure that all your pull requests are merged into your main (master) branch Make sure that all changes to master are committed to GitHub ( git status should say that there are no modified files) Locally make sure you have the latest changes from master ( git pull ) Checkout a new branch (e.g. git checkout -b release-2021-01-01 ) You may or may not want to refresh your imports as part of your release strategy (see here ) Make sure you have the latest ODK installed by running docker pull obolibrary/odkfull To actually run the release, you: Open a command line terminal window and navigate to the src/ontology directory ( cd vbo/src/ontology ) Run release pipeline: sh run.sh make prepare_release -B . Note that for some ontologies, this process can take up to 90 minutes - especially if there are large ontologies you depend on, like PRO or CHEBI. If everything went well, you should see the following output on your machine: Release files are now in ../.. - now you should commit, push and make a release on your git hosting site such as GitHub or GitLab . This will create all the specified release targets (OBO, OWL, JSON, and the variants, ont-full and ont-base) and copy them into your release directory (the top level of your repo).","title":"Run a release with the ODK"},{"location":"odk-workflows/ReleaseWorkflow/#review-the-release","text":"(Optional) Rough check. This step is frequently skipped, but for the more paranoid among us (like the author of this doc), this is a 3 minute additional effort for some peace of mind. Open the main release (vbo.owl) in you favourite development environment (i.e. Prot\u00e9g\u00e9) and eyeball the hierarchy. We recommend two simple checks: Does the very top level of the hierarchy look ok? This means that all new terms have been imported/updated correctly. Does at least one change that you know should be in this release appear? For example, a new class. This means that the release was actually based on the recent edit file. Commit your changes to the branch and make a pull request In your GitHub pull request, review the following three files in detail (based on our experience): vbo.obo - this reflects a useful subset of the whole ontology (everything that can be covered by OBO format). OBO format has that speaking for it: it is very easy to review! vbo-base.owl - this reflects the asserted axioms in your ontology that you have actually edited. Ideally also take a look at vbo-full.owl , which may reveal interesting new inferences you did not know about. Note that the diff of this file is sometimes quite large. Like with every pull request, we recommend to always employ a second set of eyes when reviewing a PR!","title":"Review the release"},{"location":"odk-workflows/ReleaseWorkflow/#merge-the-main-branch","text":"Once your CI checks have passed, and your reviews are completed, you can now merge the branch into your main branch (don't forget to delete the branch afterwards - a big button will appear after the merge is finished).","title":"Merge the main branch"},{"location":"odk-workflows/ReleaseWorkflow/#create-a-github-release","text":"Go to your releases page on GitHub by navigating to your repository, and then clicking on releases (usually on the right, for example: https://github.com/monarch-initiative/vertebrate-breed-ontology/releases). Then click \"Draft new release\" As the tag version you need to choose the date on which your ontologies were build. You can find this, for example, by looking at the vbo.obo file and check the data-version: property. The date needs to be prefixed with a v , so, for example v2020-02-06 . You can write whatever you want in the release title, but we typically write the date again. The description underneath should contain a concise list of changes or term additions. Click \"Publish release\". Done.","title":"Create a GitHub release"},{"location":"odk-workflows/ReleaseWorkflow/#debugging-typical-ontology-release-problems","text":"","title":"Debugging typical ontology release problems"},{"location":"odk-workflows/ReleaseWorkflow/#problems-with-memory","text":"When you are dealing with large ontologies, you need a lot of memory. When you see error messages relating to large ontologies such as CHEBI, PRO, NCBITAXON, or Uberon, you should think of memory first, see here .","title":"Problems with memory"},{"location":"odk-workflows/ReleaseWorkflow/#problems-when-using-obo-format-based-tools","text":"Sometimes you will get cryptic error messages when using legacy tools using OBO format, such as the ontology release tool (OORT), which is also available as part of the ODK docker container. In these cases, you need to track down what axiom or annotation actually caused the breakdown. In our experience (in about 60% of the cases) the problem lies with duplicate annotations ( def , comment ) which are illegal in OBO. Here is an example recipe of how to deal with such a problem: If you get a message like make: *** [cl.Makefile:84: oort] Error 255 you might have a OORT error. To debug this, in your terminal enter sh run.sh make IMP=false PAT=false oort -B (assuming you are already in the ontology folder in your directory) This should show you where the error is in the log (eg multiple different definitions) WARNING: THE FIX BELOW IS NOT IDEAL, YOU SHOULD ALWAYS TRY TO FIX UPSTREAM IF POSSIBLE Open vbo-edit.owl in Prot\u00e9g\u00e9 and find the offending term and delete all offending issue (e.g. delete ALL definition, if the problem was \"multiple def tags not allowed\") and save. *While this is not idea, as it will remove all definitions from that term, it will be added back again when the term is fixed in the ontology it was imported from and added back in. Rerun sh run.sh make IMP=false PAT=false oort -B and if it all passes, commit your changes to a branch and make a pull request as usual.","title":"Problems when using OBO format based tools"},{"location":"odk-workflows/RepoManagement/","text":"Managing your ODK repository Updating your ODK repository Your ODK repositories configuration is managed in src/ontology/vbo-odk.yaml . The ODK Project Configuration Schema defines all possible parameters that can be used in this config YAML. Once you have made your changes, you can run the following to apply your changes to the repository: sh run.sh make update_repo There are a large number of options that can be set to configure your ODK, but we will only discuss a few of them here. NOTE for Windows users: You may get a cryptic failure such as Set Illegal Option - if the update script located in src/scripts/update_repo.sh was saved using Windows Line endings. These need to change to unix line endings. In Notepad++, for example, you can click on Edit->EOL Conversion->Unix LF to change this. Managing imports You can use the update repository workflow described on this page to perform the following operations to your imports: Add a new import Modify an existing import Remove an import you no longer want Customise an import We will discuss all these workflows in the following. Add new import To add a new import, you first edit your odk config as described above , adding an id to the product list in the import_group section (for the sake of this example, we assume you already import RO, and your goal is to also import GO): import_group: products: - id: ro - id: go Note: our ODK file should only have one import_group which can contain multiple imports (in the products section). Next, you run the update repo workflow to apply these changes. Note that by default, this module is going to be a SLME Bottom module, see here . To change that or customise your module, see section \"Customise an import\". To finalise the addition of your import, perform the following steps: Add an import statement to your src/ontology/vbo-edit.owl file. We suggest to do this using a text editor, by simply copying an existing import declaration and renaming it to the new ontology import, for example as follows: ... Ontology(<http://purl.obolibrary.org/obo/vbo.owl> Import(<http://purl.obolibrary.org/obo/vbo/imports/ro_import.owl>) Import(<http://purl.obolibrary.org/obo/vbo/imports/go_import.owl>) ... Add your imports redirect to your catalog file src/ontology/catalog-v001.xml , for example: <uri name=\"http://purl.obolibrary.org/obo/vbo/imports/go_import.owl\" uri=\"imports/go_import.owl\"/> Test whether everything is in order: Refresh your import Open in your Ontology Editor of choice (Protege) and ensure that the expected terms are imported. Note: The catalog file src/ontology/catalog-v001.xml has one purpose: redirecting imports from URLs to local files. For example, if you have Import(<http://purl.obolibrary.org/obo/vbo/imports/go_import.owl>) in your editors file (the ontology) and <uri name=\"http://purl.obolibrary.org/obo/vbo/imports/go_import.owl\" uri=\"imports/go_import.owl\"/> in your catalog, tools like robot or Prot\u00e9g\u00e9 will recognize the statement in the catalog file to redirect the URL http://purl.obolibrary.org/obo/vbo/imports/go_import.owl to the local file imports/go_import.owl (which is in your src/ontology directory). Modify an existing import If you simply wish to refresh your import in light of new terms, see here . If you wish to change the type of your module see section \"Customise an import\". Remove an existing import To remove an existing import, perform the following steps: remove the import declaration from your src/ontology/vbo-edit.owl . remove the id from your src/ontology/vbo-odk.yaml , eg. - id: go from the list of products in the import_group . run update repo workflow delete the associated files manually: src/imports/go_import.owl src/imports/go_terms.txt Remove the respective entry from the src/ontology/catalog-v001.xml file. Customise an import By default, an import module extracted from a source ontology will be a SLME module, see here . There are various options to change the default. The following change to your repo config ( src/ontology/vbo-odk.yaml ) will switch the go import from an SLME module to a simple ROBOT filter module: import_group: products: - id: ro - id: go module_type: filter A ROBOT filter module is, essentially, importing all external terms declared by your ontology (see here on how to declare external terms to be imported). Note that the filter module does not consider terms/annotations from namespaces other than the base-namespace of the ontology itself. For example, in the example of GO above, only annotations / axioms related to the GO base IRI (http://purl.obolibrary.org/obo/GO_) would be considered. This behaviour can be changed by adding additional base IRIs as follows: import_group: products: - id: go module_type: filter base_iris: - http://purl.obolibrary.org/obo/GO_ - http://purl.obolibrary.org/obo/CL_ - http://purl.obolibrary.org/obo/BFO If you wish to customise your import entirely, you can specify your own ROBOT command to do so. To do that, add the following to your repo config ( src/ontology/vbo-odk.yaml ): import_group: products: - id: ro - id: go module_type: custom Now add a new goal in your custom Makefile ( src/ontology/vbo.Makefile , not src/ontology/Makefile ). imports/go_import.owl: mirror/ro.owl imports/ro_terms_combined.txt if [ $(IMP) = true ]; then $(ROBOT) query -i $< --update ../sparql/preprocess-module.ru \\ extract -T imports/ro_terms_combined.txt --force true --individuals exclude --method BOT \\ query --update ../sparql/inject-subset-declaration.ru --update ../sparql/postprocess-module.ru \\ annotate --ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) --output $@.tmp.owl && mv $@.tmp.owl $@; fi Now feel free to change this goal to do whatever you wish it to do! It probably makes some sense (albeit not being a strict necessity), to leave most of the goal instead and replace only: extract -T imports/ro_terms_combined.txt --force true --individuals exclude --method BOT \\ to another ROBOT pipeline. Add a component A component is an import which belongs to your ontology, e.g. is managed by you and your team. Open src/ontology/vbo-odk.yaml If you dont have it yet, add a new top level section components Under the components section, add a new section called products . This is where all your components are specified Under the products section, add a new component, e.g. - filename: mycomp.owl Example components: products: - filename: mycomp.owl When running sh run.sh make update_repo , a new file src/ontology/components/mycomp.owl will be created which you can edit as you see fit. Typical ways to edit: Using a ROBOT template to generate the component (see below) Manually curating the component separately with Prot\u00e9g\u00e9 or any other editor Providing a components/mycomp.owl: make target in src/ontology/vbo.Makefile and provide a custom command to generate the component WARNING : Note that the custom rule to generate the component MUST NOT depend on any other ODK-generated file such as seed files and the like (see issue ). Providing an additional attribute for the component in src/ontology/vbo-odk.yaml , source , to specify that this component should simply be downloaded from somewhere on the web. Adding a new component based on a ROBOT template Since ODK 1.3.2, it is possible to simply link a ROBOT template to a component without having to specify any of the import logic. In order to add a new component that is connected to one or more template files, follow these steps: Open src/ontology/vbo-odk.yaml . Make sure that use_templates: TRUE is set in the global project options. You should also make sure that use_context: TRUE is set in case you are using prefixes in your templates that are not known to robot , such as OMOP: , CPONT: and more. All non-standard prefixes you are using should be added to config/context.json . Add another component to the products section. To activate this component to be template-driven, simply say: use_template: TRUE . This will create an empty template for you in the templates directory, which will automatically be processed when recreating the component (e.g. run.bat make recreate-mycomp ). If you want to use more than one component, use the templates field to add as many template names as you wish. ODK will look for them in the src/templates directory. Advanced: If you want to provide additional processing options, you can use the template_options field. This should be a string with option from robot template . One typical example for additional options you may want to provide is --add-prefixes config/context.json to ensure the prefix map of your context is provided to robot , see above. Example : components: products: - filename: mycomp.owl use_template: TRUE template_options: --add-prefixes config/context.json templates: - template1.tsv - template2.tsv Note : if your mirror is particularly large and complex, read this ODK recommendation .","title":"Manage your ODK Repository"},{"location":"odk-workflows/RepoManagement/#managing-your-odk-repository","text":"","title":"Managing your ODK repository"},{"location":"odk-workflows/RepoManagement/#updating-your-odk-repository","text":"Your ODK repositories configuration is managed in src/ontology/vbo-odk.yaml . The ODK Project Configuration Schema defines all possible parameters that can be used in this config YAML. Once you have made your changes, you can run the following to apply your changes to the repository: sh run.sh make update_repo There are a large number of options that can be set to configure your ODK, but we will only discuss a few of them here. NOTE for Windows users: You may get a cryptic failure such as Set Illegal Option - if the update script located in src/scripts/update_repo.sh was saved using Windows Line endings. These need to change to unix line endings. In Notepad++, for example, you can click on Edit->EOL Conversion->Unix LF to change this.","title":"Updating your ODK repository"},{"location":"odk-workflows/RepoManagement/#managing-imports","text":"You can use the update repository workflow described on this page to perform the following operations to your imports: Add a new import Modify an existing import Remove an import you no longer want Customise an import We will discuss all these workflows in the following.","title":"Managing imports"},{"location":"odk-workflows/RepoManagement/#add-new-import","text":"To add a new import, you first edit your odk config as described above , adding an id to the product list in the import_group section (for the sake of this example, we assume you already import RO, and your goal is to also import GO): import_group: products: - id: ro - id: go Note: our ODK file should only have one import_group which can contain multiple imports (in the products section). Next, you run the update repo workflow to apply these changes. Note that by default, this module is going to be a SLME Bottom module, see here . To change that or customise your module, see section \"Customise an import\". To finalise the addition of your import, perform the following steps: Add an import statement to your src/ontology/vbo-edit.owl file. We suggest to do this using a text editor, by simply copying an existing import declaration and renaming it to the new ontology import, for example as follows: ... Ontology(<http://purl.obolibrary.org/obo/vbo.owl> Import(<http://purl.obolibrary.org/obo/vbo/imports/ro_import.owl>) Import(<http://purl.obolibrary.org/obo/vbo/imports/go_import.owl>) ... Add your imports redirect to your catalog file src/ontology/catalog-v001.xml , for example: <uri name=\"http://purl.obolibrary.org/obo/vbo/imports/go_import.owl\" uri=\"imports/go_import.owl\"/> Test whether everything is in order: Refresh your import Open in your Ontology Editor of choice (Protege) and ensure that the expected terms are imported. Note: The catalog file src/ontology/catalog-v001.xml has one purpose: redirecting imports from URLs to local files. For example, if you have Import(<http://purl.obolibrary.org/obo/vbo/imports/go_import.owl>) in your editors file (the ontology) and <uri name=\"http://purl.obolibrary.org/obo/vbo/imports/go_import.owl\" uri=\"imports/go_import.owl\"/> in your catalog, tools like robot or Prot\u00e9g\u00e9 will recognize the statement in the catalog file to redirect the URL http://purl.obolibrary.org/obo/vbo/imports/go_import.owl to the local file imports/go_import.owl (which is in your src/ontology directory).","title":"Add new import"},{"location":"odk-workflows/RepoManagement/#modify-an-existing-import","text":"If you simply wish to refresh your import in light of new terms, see here . If you wish to change the type of your module see section \"Customise an import\".","title":"Modify an existing import"},{"location":"odk-workflows/RepoManagement/#remove-an-existing-import","text":"To remove an existing import, perform the following steps: remove the import declaration from your src/ontology/vbo-edit.owl . remove the id from your src/ontology/vbo-odk.yaml , eg. - id: go from the list of products in the import_group . run update repo workflow delete the associated files manually: src/imports/go_import.owl src/imports/go_terms.txt Remove the respective entry from the src/ontology/catalog-v001.xml file.","title":"Remove an existing import"},{"location":"odk-workflows/RepoManagement/#customise-an-import","text":"By default, an import module extracted from a source ontology will be a SLME module, see here . There are various options to change the default. The following change to your repo config ( src/ontology/vbo-odk.yaml ) will switch the go import from an SLME module to a simple ROBOT filter module: import_group: products: - id: ro - id: go module_type: filter A ROBOT filter module is, essentially, importing all external terms declared by your ontology (see here on how to declare external terms to be imported). Note that the filter module does not consider terms/annotations from namespaces other than the base-namespace of the ontology itself. For example, in the example of GO above, only annotations / axioms related to the GO base IRI (http://purl.obolibrary.org/obo/GO_) would be considered. This behaviour can be changed by adding additional base IRIs as follows: import_group: products: - id: go module_type: filter base_iris: - http://purl.obolibrary.org/obo/GO_ - http://purl.obolibrary.org/obo/CL_ - http://purl.obolibrary.org/obo/BFO If you wish to customise your import entirely, you can specify your own ROBOT command to do so. To do that, add the following to your repo config ( src/ontology/vbo-odk.yaml ): import_group: products: - id: ro - id: go module_type: custom Now add a new goal in your custom Makefile ( src/ontology/vbo.Makefile , not src/ontology/Makefile ). imports/go_import.owl: mirror/ro.owl imports/ro_terms_combined.txt if [ $(IMP) = true ]; then $(ROBOT) query -i $< --update ../sparql/preprocess-module.ru \\ extract -T imports/ro_terms_combined.txt --force true --individuals exclude --method BOT \\ query --update ../sparql/inject-subset-declaration.ru --update ../sparql/postprocess-module.ru \\ annotate --ontology-iri $(ONTBASE)/$@ $(ANNOTATE_ONTOLOGY_VERSION) --output $@.tmp.owl && mv $@.tmp.owl $@; fi Now feel free to change this goal to do whatever you wish it to do! It probably makes some sense (albeit not being a strict necessity), to leave most of the goal instead and replace only: extract -T imports/ro_terms_combined.txt --force true --individuals exclude --method BOT \\ to another ROBOT pipeline.","title":"Customise an import"},{"location":"odk-workflows/RepoManagement/#add-a-component","text":"A component is an import which belongs to your ontology, e.g. is managed by you and your team. Open src/ontology/vbo-odk.yaml If you dont have it yet, add a new top level section components Under the components section, add a new section called products . This is where all your components are specified Under the products section, add a new component, e.g. - filename: mycomp.owl Example components: products: - filename: mycomp.owl When running sh run.sh make update_repo , a new file src/ontology/components/mycomp.owl will be created which you can edit as you see fit. Typical ways to edit: Using a ROBOT template to generate the component (see below) Manually curating the component separately with Prot\u00e9g\u00e9 or any other editor Providing a components/mycomp.owl: make target in src/ontology/vbo.Makefile and provide a custom command to generate the component WARNING : Note that the custom rule to generate the component MUST NOT depend on any other ODK-generated file such as seed files and the like (see issue ). Providing an additional attribute for the component in src/ontology/vbo-odk.yaml , source , to specify that this component should simply be downloaded from somewhere on the web.","title":"Add a component"},{"location":"odk-workflows/RepoManagement/#adding-a-new-component-based-on-a-robot-template","text":"Since ODK 1.3.2, it is possible to simply link a ROBOT template to a component without having to specify any of the import logic. In order to add a new component that is connected to one or more template files, follow these steps: Open src/ontology/vbo-odk.yaml . Make sure that use_templates: TRUE is set in the global project options. You should also make sure that use_context: TRUE is set in case you are using prefixes in your templates that are not known to robot , such as OMOP: , CPONT: and more. All non-standard prefixes you are using should be added to config/context.json . Add another component to the products section. To activate this component to be template-driven, simply say: use_template: TRUE . This will create an empty template for you in the templates directory, which will automatically be processed when recreating the component (e.g. run.bat make recreate-mycomp ). If you want to use more than one component, use the templates field to add as many template names as you wish. ODK will look for them in the src/templates directory. Advanced: If you want to provide additional processing options, you can use the template_options field. This should be a string with option from robot template . One typical example for additional options you may want to provide is --add-prefixes config/context.json to ensure the prefix map of your context is provided to robot , see above. Example : components: products: - filename: mycomp.owl use_template: TRUE template_options: --add-prefixes config/context.json templates: - template1.tsv - template2.tsv Note : if your mirror is particularly large and complex, read this ODK recommendation .","title":"Adding a new component based on a ROBOT template"},{"location":"odk-workflows/RepositoryFileStructure/","text":"Repository structure The main kinds of files in the repository: Release files Imports Components Release files Release file are the file that are considered part of the official ontology release and to be used by the community. A detailed description of the release artefacts can be found here . Imports Imports are subsets of external ontologies that contain terms and axioms you would like to re-use in your ontology. These are considered \"external\", like dependencies in software development, and are not included in your \"base\" product, which is the release artefact which contains only those axioms that you personally maintain. These are the current imports in VBO Import URL Type ncbitaxon http://purl.obolibrary.org/obo/ncbitaxon/subsets/taxslim.owl None ro http://purl.obolibrary.org/obo/ro.owl None wikidata http://purl.obolibrary.org/obo/wikidata.owl custom omo http://purl.obolibrary.org/obo/omo.owl mirror cob http://purl.obolibrary.org/obo/cob.owl None Components Components, in contrast to imports, are considered full members of the ontology. This means that any axiom in a component is also included in the ontology base - which means it is considered native to the ontology. While this sounds complicated, consider this: conceptually, no component should be part of more than one ontology. If that seems to be the case, we are most likely talking about an import. Components are often not needed for ontologies, but there are some use cases: There is an automated process that generates and re-generates a part of the ontology A part of the ontology is managed in ROBOT templates The expressivity of the component is higher than the format of the edit file. For example, people still choose to manage their ontology in OBO format (they should not) missing out on a lot of owl features. They may choose to manage logic that is beyond OBO in a specific OWL component. These are the components in VBO Filename URL dadistransbound.owl None dadisbreedcountry.owl None livestockbreeds.owl None catbreeds.owl None dogbreeds.owl None breedstatus.owl None highlevelclass.owl None lbo.owl None relation.owl None otherbreeds.owl None","title":"Your ODK Repository Overview"},{"location":"odk-workflows/RepositoryFileStructure/#repository-structure","text":"The main kinds of files in the repository: Release files Imports Components","title":"Repository structure"},{"location":"odk-workflows/RepositoryFileStructure/#release-files","text":"Release file are the file that are considered part of the official ontology release and to be used by the community. A detailed description of the release artefacts can be found here .","title":"Release files"},{"location":"odk-workflows/RepositoryFileStructure/#imports","text":"Imports are subsets of external ontologies that contain terms and axioms you would like to re-use in your ontology. These are considered \"external\", like dependencies in software development, and are not included in your \"base\" product, which is the release artefact which contains only those axioms that you personally maintain. These are the current imports in VBO Import URL Type ncbitaxon http://purl.obolibrary.org/obo/ncbitaxon/subsets/taxslim.owl None ro http://purl.obolibrary.org/obo/ro.owl None wikidata http://purl.obolibrary.org/obo/wikidata.owl custom omo http://purl.obolibrary.org/obo/omo.owl mirror cob http://purl.obolibrary.org/obo/cob.owl None","title":"Imports"},{"location":"odk-workflows/RepositoryFileStructure/#components","text":"Components, in contrast to imports, are considered full members of the ontology. This means that any axiom in a component is also included in the ontology base - which means it is considered native to the ontology. While this sounds complicated, consider this: conceptually, no component should be part of more than one ontology. If that seems to be the case, we are most likely talking about an import. Components are often not needed for ontologies, but there are some use cases: There is an automated process that generates and re-generates a part of the ontology A part of the ontology is managed in ROBOT templates The expressivity of the component is higher than the format of the edit file. For example, people still choose to manage their ontology in OBO format (they should not) missing out on a lot of owl features. They may choose to manage logic that is beyond OBO in a specific OWL component. These are the components in VBO Filename URL dadistransbound.owl None dadisbreedcountry.owl None livestockbreeds.owl None catbreeds.owl None dogbreeds.owl None breedstatus.owl None highlevelclass.owl None lbo.owl None relation.owl None otherbreeds.owl None","title":"Components"},{"location":"odk-workflows/SettingUpDockerForODK/","text":"Setting up your Docker environment for ODK use One of the most frequent problems with running the ODK for the first time is failure because of lack of memory. This can look like a Java OutOfMemory exception, but more often than not it will appear as something like an Error 137 . There are two places you need to consider to set your memory: Your src/ontology/run.sh (or run.bat) file. You can set the memory in there by adding robot_java_args: '-Xmx8G' to your src/ontology/vbo-odk.yaml file, see for example here . Set your docker memory. By default, it should be about 10-20% more than your robot_java_args variable. You can manage your memory settings by right-clicking on the docker whale in your system bar-->Preferences-->Resources-->Advanced, see picture below.","title":"Setting up Docker for ODK"},{"location":"odk-workflows/SettingUpDockerForODK/#setting-up-your-docker-environment-for-odk-use","text":"One of the most frequent problems with running the ODK for the first time is failure because of lack of memory. This can look like a Java OutOfMemory exception, but more often than not it will appear as something like an Error 137 . There are two places you need to consider to set your memory: Your src/ontology/run.sh (or run.bat) file. You can set the memory in there by adding robot_java_args: '-Xmx8G' to your src/ontology/vbo-odk.yaml file, see for example here . Set your docker memory. By default, it should be about 10-20% more than your robot_java_args variable. You can manage your memory settings by right-clicking on the docker whale in your system bar-->Preferences-->Resources-->Advanced, see picture below.","title":"Setting up your Docker environment for ODK use"},{"location":"odk-workflows/UpdateImports/","text":"Update Imports Workflow This page discusses how to update the contents of your imports, like adding or removing terms. If you are looking to customise imports, like changing the module type, see here . Importing a new term Note: some ontologies now use a merged-import system to manage dynamic imports, for these please follow instructions in the section title \"Using the Base Module approach\". Importing a new term is split into two sub-phases: Declaring the terms to be imported Refreshing imports dynamically Declaring terms to be imported There are three ways to declare terms that are to be imported from an external ontology. Choose the appropriate one for your particular scenario (all three can be used in parallel if need be): Prot\u00e9g\u00e9-based declaration Using term files Using the custom import template Prot\u00e9g\u00e9-based declaration This workflow is to be avoided, but may be appropriate if the editor does not have access to the ODK docker container . This approach also applies to ontologies that use base module import approach. Open your ontology (edit file) in Prot\u00e9g\u00e9 (5.5+). Select 'owl:Thing' Add a new class as usual. Paste the full iri in the 'Name:' field, for example, http://purl.obolibrary.org/obo/CHEBI_50906. Click 'OK' Now you can use this term for example to construct logical definitions. The next time the imports are refreshed (see how to refresh here ), the metadata (labels, definitions, etc.) for this term are imported from the respective external source ontology and becomes visible in your ontology. Using term files Every import has, by default a term file associated with it, which can be found in the imports directory. For example, if you have a GO import in src/ontology/go_import.owl , you will also have an associated term file src/ontology/go_terms.txt . You can add terms in there simply as a list: GO:0008150 GO:0008151 Now you can run the refresh imports workflow ) and the two terms will be imported. Using the custom import template This workflow is appropriate if: You prefer to manage all your imported terms in a single file (rather than multiple files like in the \"Using term files\" workflow above). You wish to augment your imported ontologies with additional information. This requires a cautionary discussion. To enable this workflow, you add the following to your ODK config file ( src/ontology/vbo-odk.yaml ), and update the repository : use_custom_import_module: TRUE Now you can manage your imported terms directly in the custom external terms template, which is located at src/templates/external_import.owl . Note that this file is a ROBOT template , and can, in principle, be extended to include any axioms you like. Before extending the template, however, read the following carefully. The main purpose of the custom import template is to enable the management off all terms to be imported in a centralised place. To enable that, you do not have to do anything other than maintaining the template. So if you, say currently import APOLLO_SV:00000480 , and you wish to import APOLLO_SV:00000532 , you simply add a row like this: ID Entity Type ID TYPE APOLLO_SV:00000480 owl:Class APOLLO_SV:00000532 owl:Class When the imports are refreshed see imports refresh workflow , the term(s) will simply be imported from the configured ontologies. Now, if you wish to extend the Makefile (which is beyond these instructions) and add, say, synonyms to the imported terms, you can do that, but you need to (a) preserve the ID and ENTITY columns and (b) ensure that the ROBOT template is valid otherwise, see here . WARNING . Note that doing this is a widespread antipattern (see related issue ). You should not change the axioms of terms that do not belong into your ontology unless necessary - such changes should always be pushed into the ontology where they belong. However, since people are doing it, whether the OBO Foundry likes it or not, at least using the custom imports module as described here localises the changes to a single simple template and ensures that none of the annotations added this way are merged into the base file . Refresh imports If you want to refresh the import yourself (this may be necessary to pass the travis tests), and you have the ODK installed, you can do the following (using go as an example): First, you navigate in your terminal to the ontology directory (underneath src in your hpo root directory). cd src/ontology Then, you regenerate the import that will now include any new terms you have added. Note: You must have docker installed . sh run.sh make PAT=false imports/go_import.owl -B Since ODK 1.2.27, it is also possible to simply run the following, which is the same as the above: sh run.sh make refresh-go Note that in case you changed the defaults, you need to add IMP=true and/or MIR=true to the command below: sh run.sh make IMP=true MIR=true PAT=false imports/go_import.owl -B If you wish to skip refreshing the mirror, i.e. skip downloading the latest version of the source ontology for your import (e.g. go.owl for your go import) you can set MIR=false instead, which will do the exact same thing as the above, but is easier to remember: sh run.sh make IMP=true MIR=false PAT=false imports/go_import.owl -B Using the Base Module approach Since ODK 1.2.31, we support an entirely new approach to generate modules: Using base files. The idea is to only import axioms from ontologies that actually belong to it . A base file is a subset of the ontology that only contains those axioms that nominally belong there. In other words, the base file does not contain any axioms that belong to another ontology. An example would be this: Imagine this being the full Uberon ontology: Axiom 1: BFO:123 SubClassOf BFO:124 Axiom 1: UBERON:123 SubClassOf BFO:123 Axiom 1: UBERON:124 SubClassOf UBERON 123 The base file is the set of all axioms that are about UBERON terms: Axiom 1: UBERON:123 SubClassOf BFO:123 Axiom 1: UBERON:124 SubClassOf UBERON 123 I.e. Axiom 1: BFO:123 SubClassOf BFO:124 Gets removed. The base file pipeline is a bit more complex than the normal pipelines, because of the logical interactions between the imported ontologies. This is solved by _first merging all mirrors into one huge file and then extracting one mega module from it. Example: Let's say we are importing terms from Uberon, GO and RO in our ontologies. When we use the base pipelines, we 1) First obtain the base (usually by simply downloading it, but there is also an option now to create it with ROBOT) 2) We merge all base files into one big pile 3) Then we extract a single module imports/merged_import.owl The first implementation of this pipeline is PATO, see https://github.com/pato-ontology/pato/blob/master/src/ontology/pato-odk.yaml. To check if your ontology uses this method, check src/ontology/vbo-odk.yaml to see if use_base_merging: TRUE is declared under import_group If your ontology uses Base Module approach, please use the following steps: First, add the term to be imported to the term file associated with it (see above \"Using term files\" section if this is not clear to you) Next, you navigate in your terminal to the ontology directory (underneath src in your hpo root directory). cd src/ontology Then refresh imports by running sh run.sh make imports/merged_import.owl Note: if your mirrors are updated, you can run sh run.sh make no-mirror-refresh-merged This requires quite a bit of memory on your local machine, so if you encounter an error, it might be a lack of memory on your computer. A solution would be to create a ticket in an issue tracker requesting for the term to be imported, and one of the local devs should pick this up and run the import for you. Lastly, restart Prot\u00e9g\u00e9, and the term should be imported in ready to be used.","title":"Imports management"},{"location":"odk-workflows/UpdateImports/#update-imports-workflow","text":"This page discusses how to update the contents of your imports, like adding or removing terms. If you are looking to customise imports, like changing the module type, see here .","title":"Update Imports Workflow"},{"location":"odk-workflows/UpdateImports/#importing-a-new-term","text":"Note: some ontologies now use a merged-import system to manage dynamic imports, for these please follow instructions in the section title \"Using the Base Module approach\". Importing a new term is split into two sub-phases: Declaring the terms to be imported Refreshing imports dynamically","title":"Importing a new term"},{"location":"odk-workflows/UpdateImports/#declaring-terms-to-be-imported","text":"There are three ways to declare terms that are to be imported from an external ontology. Choose the appropriate one for your particular scenario (all three can be used in parallel if need be): Prot\u00e9g\u00e9-based declaration Using term files Using the custom import template","title":"Declaring terms to be imported"},{"location":"odk-workflows/UpdateImports/#protege-based-declaration","text":"This workflow is to be avoided, but may be appropriate if the editor does not have access to the ODK docker container . This approach also applies to ontologies that use base module import approach. Open your ontology (edit file) in Prot\u00e9g\u00e9 (5.5+). Select 'owl:Thing' Add a new class as usual. Paste the full iri in the 'Name:' field, for example, http://purl.obolibrary.org/obo/CHEBI_50906. Click 'OK' Now you can use this term for example to construct logical definitions. The next time the imports are refreshed (see how to refresh here ), the metadata (labels, definitions, etc.) for this term are imported from the respective external source ontology and becomes visible in your ontology.","title":"Prot\u00e9g\u00e9-based declaration"},{"location":"odk-workflows/UpdateImports/#using-term-files","text":"Every import has, by default a term file associated with it, which can be found in the imports directory. For example, if you have a GO import in src/ontology/go_import.owl , you will also have an associated term file src/ontology/go_terms.txt . You can add terms in there simply as a list: GO:0008150 GO:0008151 Now you can run the refresh imports workflow ) and the two terms will be imported.","title":"Using term files"},{"location":"odk-workflows/UpdateImports/#using-the-custom-import-template","text":"This workflow is appropriate if: You prefer to manage all your imported terms in a single file (rather than multiple files like in the \"Using term files\" workflow above). You wish to augment your imported ontologies with additional information. This requires a cautionary discussion. To enable this workflow, you add the following to your ODK config file ( src/ontology/vbo-odk.yaml ), and update the repository : use_custom_import_module: TRUE Now you can manage your imported terms directly in the custom external terms template, which is located at src/templates/external_import.owl . Note that this file is a ROBOT template , and can, in principle, be extended to include any axioms you like. Before extending the template, however, read the following carefully. The main purpose of the custom import template is to enable the management off all terms to be imported in a centralised place. To enable that, you do not have to do anything other than maintaining the template. So if you, say currently import APOLLO_SV:00000480 , and you wish to import APOLLO_SV:00000532 , you simply add a row like this: ID Entity Type ID TYPE APOLLO_SV:00000480 owl:Class APOLLO_SV:00000532 owl:Class When the imports are refreshed see imports refresh workflow , the term(s) will simply be imported from the configured ontologies. Now, if you wish to extend the Makefile (which is beyond these instructions) and add, say, synonyms to the imported terms, you can do that, but you need to (a) preserve the ID and ENTITY columns and (b) ensure that the ROBOT template is valid otherwise, see here . WARNING . Note that doing this is a widespread antipattern (see related issue ). You should not change the axioms of terms that do not belong into your ontology unless necessary - such changes should always be pushed into the ontology where they belong. However, since people are doing it, whether the OBO Foundry likes it or not, at least using the custom imports module as described here localises the changes to a single simple template and ensures that none of the annotations added this way are merged into the base file .","title":"Using the custom import template"},{"location":"odk-workflows/UpdateImports/#refresh-imports","text":"If you want to refresh the import yourself (this may be necessary to pass the travis tests), and you have the ODK installed, you can do the following (using go as an example): First, you navigate in your terminal to the ontology directory (underneath src in your hpo root directory). cd src/ontology Then, you regenerate the import that will now include any new terms you have added. Note: You must have docker installed . sh run.sh make PAT=false imports/go_import.owl -B Since ODK 1.2.27, it is also possible to simply run the following, which is the same as the above: sh run.sh make refresh-go Note that in case you changed the defaults, you need to add IMP=true and/or MIR=true to the command below: sh run.sh make IMP=true MIR=true PAT=false imports/go_import.owl -B If you wish to skip refreshing the mirror, i.e. skip downloading the latest version of the source ontology for your import (e.g. go.owl for your go import) you can set MIR=false instead, which will do the exact same thing as the above, but is easier to remember: sh run.sh make IMP=true MIR=false PAT=false imports/go_import.owl -B","title":"Refresh imports"},{"location":"odk-workflows/UpdateImports/#using-the-base-module-approach","text":"Since ODK 1.2.31, we support an entirely new approach to generate modules: Using base files. The idea is to only import axioms from ontologies that actually belong to it . A base file is a subset of the ontology that only contains those axioms that nominally belong there. In other words, the base file does not contain any axioms that belong to another ontology. An example would be this: Imagine this being the full Uberon ontology: Axiom 1: BFO:123 SubClassOf BFO:124 Axiom 1: UBERON:123 SubClassOf BFO:123 Axiom 1: UBERON:124 SubClassOf UBERON 123 The base file is the set of all axioms that are about UBERON terms: Axiom 1: UBERON:123 SubClassOf BFO:123 Axiom 1: UBERON:124 SubClassOf UBERON 123 I.e. Axiom 1: BFO:123 SubClassOf BFO:124 Gets removed. The base file pipeline is a bit more complex than the normal pipelines, because of the logical interactions between the imported ontologies. This is solved by _first merging all mirrors into one huge file and then extracting one mega module from it. Example: Let's say we are importing terms from Uberon, GO and RO in our ontologies. When we use the base pipelines, we 1) First obtain the base (usually by simply downloading it, but there is also an option now to create it with ROBOT) 2) We merge all base files into one big pile 3) Then we extract a single module imports/merged_import.owl The first implementation of this pipeline is PATO, see https://github.com/pato-ontology/pato/blob/master/src/ontology/pato-odk.yaml. To check if your ontology uses this method, check src/ontology/vbo-odk.yaml to see if use_base_merging: TRUE is declared under import_group If your ontology uses Base Module approach, please use the following steps: First, add the term to be imported to the term file associated with it (see above \"Using term files\" section if this is not clear to you) Next, you navigate in your terminal to the ontology directory (underneath src in your hpo root directory). cd src/ontology Then refresh imports by running sh run.sh make imports/merged_import.owl Note: if your mirrors are updated, you can run sh run.sh make no-mirror-refresh-merged This requires quite a bit of memory on your local machine, so if you encounter an error, it might be a lack of memory on your computer. A solution would be to create a ticket in an issue tracker requesting for the term to be imported, and one of the local devs should pick this up and run the import for you. Lastly, restart Prot\u00e9g\u00e9, and the term should be imported in ready to be used.","title":"Using the Base Module approach"},{"location":"odk-workflows/components/","text":"Adding components to an ODK repo For details on what components are, please see component section of repository file structure document . To add custom components to an ODK repo, please follow the following steps: 1) Locate your odk yaml file and open it with your favourite text editor (src/ontology/vbo-odk.yaml) 2) Search if there is already a component section to the yaml file, if not add it accordingly, adding the name of your component: components: products: - filename: your-component-name.owl 3) Add the component to your catalog file (src/ontology/catalog-v001.xml) <uri name=\"http://purl.obolibrary.org/obo/vbo/components/your-component-name.owl\" uri=\"components/your-component-name.owl\"/> 4) Add the component to the edit file (src/ontology/vbo-edit.obo) for .obo formats: import: http://purl.obolibrary.org/obo/vbo/components/your-component-name.owl for .owl formats: Import(<http://purl.obolibrary.org/obo/vbo/components/your-component-name.owl>) 5) Refresh your repo by running sh run.sh make update_repo - this should create a new file in src/ontology/components. 6) In your custom makefile (src/ontology/vbo.Makefile) add a goal for your custom make file. In this example, the goal is a ROBOT template. $(COMPONENTSDIR)/your-component-name.owl: $(SRC) ../templates/your-component-template.tsv $(ROBOT) template --template ../templates/your-component-template.tsv \\ annotate --ontology-iri $(ONTBASE)/$@ --output $(COMPONENTSDIR)/your-component-name.owl (If using a ROBOT template, do not forget to add your template tsv in src/templates/) 7) Make the file by running sh run.sh make components/your-component-name.owl","title":"Adding components to an ODK repo"},{"location":"odk-workflows/components/#adding-components-to-an-odk-repo","text":"For details on what components are, please see component section of repository file structure document . To add custom components to an ODK repo, please follow the following steps: 1) Locate your odk yaml file and open it with your favourite text editor (src/ontology/vbo-odk.yaml) 2) Search if there is already a component section to the yaml file, if not add it accordingly, adding the name of your component: components: products: - filename: your-component-name.owl 3) Add the component to your catalog file (src/ontology/catalog-v001.xml) <uri name=\"http://purl.obolibrary.org/obo/vbo/components/your-component-name.owl\" uri=\"components/your-component-name.owl\"/> 4) Add the component to the edit file (src/ontology/vbo-edit.obo) for .obo formats: import: http://purl.obolibrary.org/obo/vbo/components/your-component-name.owl for .owl formats: Import(<http://purl.obolibrary.org/obo/vbo/components/your-component-name.owl>) 5) Refresh your repo by running sh run.sh make update_repo - this should create a new file in src/ontology/components. 6) In your custom makefile (src/ontology/vbo.Makefile) add a goal for your custom make file. In this example, the goal is a ROBOT template. $(COMPONENTSDIR)/your-component-name.owl: $(SRC) ../templates/your-component-template.tsv $(ROBOT) template --template ../templates/your-component-template.tsv \\ annotate --ontology-iri $(ONTBASE)/$@ --output $(COMPONENTSDIR)/your-component-name.owl (If using a ROBOT template, do not forget to add your template tsv in src/templates/) 7) Make the file by running sh run.sh make components/your-component-name.owl","title":"Adding components to an ODK repo"},{"location":"ontologymodeling/axioms/","text":"Axioms in VBO Logical axioms are relational information about classes that are primarily aimed at machines. They relate terms within the same ontology and across ontologies. They provide context, allow reasoners to assist in and verify classification, and support complex computational queries. Read more information about logical axiomatization here . \u201chas foundation stock\u201d axiom Breeds are often created by crossing other breeds whose traits and/or pedigrees are desirable. The animals that are the progenitors, or foundation, of a breed are called \u201cfoundation stock\u201d; they provide part of the underlying genetic base for a new distinct population [https://en.wikipedia.org/wiki/Foundation_stock] (https://en.wikipedia.org/wiki/Foundation_stock). Knowing the \u201cfoundation stock(s)\u201d of a breed is often of great interest for example in breeding programs to understand the frequency of a disease allele in a population. Object : VBO term representing a breed \u201chas foundation stock\u201d axiom is added to a VBO term representing a breed (it should be noted that there is no indication in the ontology whether a term represents a breed, a sub-breed, a variety, etc). The following terms should not have a \u201chas foundation stock\u201d SubClassOf annotation: - NCBITaxom term representing a species, genus, family, etc. - VBO term representing a grouping class (e.g. \u201cdog breed\u201d, \u201ccattle breed\u201d, etc.) Relation : has foundation stock \u2018has foundation stock\u2019 (VBO:0300019). Definition: \u201ca relation between two distinct material entities (breeds or species), a descendant entity and an ancestor entity, in which the descendant entity is the result of mating, manipulation, or geographical or cultural isolation of the ancestor entity, therefore inheriting some of the ancestor\u2019s genetic material.\u201d Target : VBO term or NCBITaxon term Targets allowed includes: - VBO term representing a breed - example: \u2018Cymric (Cat)\u2019 VBO:0100080 has foundation stock \u2018Manx (Cat)\u2019 VBO:0100156 - NCBITaxon representing species - Breed created by crossing with \u201cwild\u201d animals of the same species. - Breed created by crossing with animals from another species (where no actual breed of this another species is recorded): - example: \u2018Kanaani (Cat)\u2019 VBO:0100137 has foundation stock \u2018African Wildcat\u2019 NCBITaxon:61377 Notes : - A term can have multiple \u201chas foundation stock\u201d SubClassOf - example: 'Himalayan (Cat)' (VBO:0100117) was created from a cross of individuals from 'Siamese (Cat)' (VBO:0100221) and 'Persian (Cat)' (VBO:0100188) - A lot of the information about \u201cfoundation stock\u201d is provided in breed descriptions and histories issued by the breed sources. These sources are recorded as \u201csource\u201d annotation of the SubClassOf axiom. - Currently, a lot of \u201cfoundation stock\u201d information is available in the \u201cdescription of origin\u201d annotation, and not yet as \u201cSubClassOf\u201d annotation. Work is underway to extract this information from the free text note to create these \u201cSubClassOf\u201d annotations. \u201cbreed reported in geographic location\u201d axiom Most breeds in [DAD-IS] (https://www.fao.org/dad-is/en/) represent breed populations that exist in a specific country as reported by officially nominated National Coordinators. Therefore the concept of these DAD-IS breeds specifically represent a \u201cbreed that exists in a specific country\u201d. This concept is unique to DAD-IS and its goals [https://www.fao.org/dad-is/en/] (https://www.fao.org/dad-is/en/). Object : VBO term representing a DAD-IS \u201clocal breeds\u201d or \u201cnational breed population\u201d - \u201cnational breed population\u201d refers to the existence of a particular breed in a particular country. For example, a breed of chicken called \u201cAlatau\u201d reported to exist in Kyrgyzstan (VBO:0007427) - \u201clocal breed\u201d refers to a country specific instance of a same breed that exists in each of several countries (itself called \u201ctransboundary\u201d breed). (Example: \u2018Jersey Giant, Canada (Chicken)\u2019 (VBO:0006068) and 'Jersey Giant, Ireland (Chicken)' (VBO:0006071) are local breeds with the transboundary parent term 'Jersey Giant (Chicken)' (VBO:0000547)) Relation : breed reported in geographic location \u2018breed reported in geographic location\u2019 (VBO:0300020). Definition: \u201ca relation between a breed and the geographic location where the breed was reported to exist by country-nominated FAO National Coordinators.\u201d Target : Country (Wikidata ID for country) Notes : - This SubClassOf should only be used for breeds reported from DAD-IS, i.e., representing a breed defined as existing in a country. This concept will rarely exists outside of DAD-IS. - VBO terms with this SubClassOf axiom should have the following rdfs:comment, \"The concept of \u201cbreed reported in geographic location by FAO National Coordinators\u201d is unique to DAD-IS [https://www.fao.org/dad-is/en/] (https://www.fao.org/dad-is/en/). This VBO term should therefore be used specifically for the breed conforming to this concept.\"","title":"Axioms in VBO"},{"location":"ontologymodeling/axioms/#axioms-in-vbo","text":"Logical axioms are relational information about classes that are primarily aimed at machines. They relate terms within the same ontology and across ontologies. They provide context, allow reasoners to assist in and verify classification, and support complex computational queries. Read more information about logical axiomatization here .","title":"Axioms in VBO"},{"location":"ontologymodeling/axioms/#has-foundation-stock-axiom","text":"Breeds are often created by crossing other breeds whose traits and/or pedigrees are desirable. The animals that are the progenitors, or foundation, of a breed are called \u201cfoundation stock\u201d; they provide part of the underlying genetic base for a new distinct population [https://en.wikipedia.org/wiki/Foundation_stock] (https://en.wikipedia.org/wiki/Foundation_stock). Knowing the \u201cfoundation stock(s)\u201d of a breed is often of great interest for example in breeding programs to understand the frequency of a disease allele in a population. Object : VBO term representing a breed \u201chas foundation stock\u201d axiom is added to a VBO term representing a breed (it should be noted that there is no indication in the ontology whether a term represents a breed, a sub-breed, a variety, etc). The following terms should not have a \u201chas foundation stock\u201d SubClassOf annotation: - NCBITaxom term representing a species, genus, family, etc. - VBO term representing a grouping class (e.g. \u201cdog breed\u201d, \u201ccattle breed\u201d, etc.) Relation : has foundation stock \u2018has foundation stock\u2019 (VBO:0300019). Definition: \u201ca relation between two distinct material entities (breeds or species), a descendant entity and an ancestor entity, in which the descendant entity is the result of mating, manipulation, or geographical or cultural isolation of the ancestor entity, therefore inheriting some of the ancestor\u2019s genetic material.\u201d Target : VBO term or NCBITaxon term Targets allowed includes: - VBO term representing a breed - example: \u2018Cymric (Cat)\u2019 VBO:0100080 has foundation stock \u2018Manx (Cat)\u2019 VBO:0100156 - NCBITaxon representing species - Breed created by crossing with \u201cwild\u201d animals of the same species. - Breed created by crossing with animals from another species (where no actual breed of this another species is recorded): - example: \u2018Kanaani (Cat)\u2019 VBO:0100137 has foundation stock \u2018African Wildcat\u2019 NCBITaxon:61377 Notes : - A term can have multiple \u201chas foundation stock\u201d SubClassOf - example: 'Himalayan (Cat)' (VBO:0100117) was created from a cross of individuals from 'Siamese (Cat)' (VBO:0100221) and 'Persian (Cat)' (VBO:0100188) - A lot of the information about \u201cfoundation stock\u201d is provided in breed descriptions and histories issued by the breed sources. These sources are recorded as \u201csource\u201d annotation of the SubClassOf axiom. - Currently, a lot of \u201cfoundation stock\u201d information is available in the \u201cdescription of origin\u201d annotation, and not yet as \u201cSubClassOf\u201d annotation. Work is underway to extract this information from the free text note to create these \u201cSubClassOf\u201d annotations.","title":"\u201chas foundation stock\u201d axiom"},{"location":"ontologymodeling/axioms/#breed-reported-in-geographic-location-axiom","text":"Most breeds in [DAD-IS] (https://www.fao.org/dad-is/en/) represent breed populations that exist in a specific country as reported by officially nominated National Coordinators. Therefore the concept of these DAD-IS breeds specifically represent a \u201cbreed that exists in a specific country\u201d. This concept is unique to DAD-IS and its goals [https://www.fao.org/dad-is/en/] (https://www.fao.org/dad-is/en/). Object : VBO term representing a DAD-IS \u201clocal breeds\u201d or \u201cnational breed population\u201d - \u201cnational breed population\u201d refers to the existence of a particular breed in a particular country. For example, a breed of chicken called \u201cAlatau\u201d reported to exist in Kyrgyzstan (VBO:0007427) - \u201clocal breed\u201d refers to a country specific instance of a same breed that exists in each of several countries (itself called \u201ctransboundary\u201d breed). (Example: \u2018Jersey Giant, Canada (Chicken)\u2019 (VBO:0006068) and 'Jersey Giant, Ireland (Chicken)' (VBO:0006071) are local breeds with the transboundary parent term 'Jersey Giant (Chicken)' (VBO:0000547)) Relation : breed reported in geographic location \u2018breed reported in geographic location\u2019 (VBO:0300020). Definition: \u201ca relation between a breed and the geographic location where the breed was reported to exist by country-nominated FAO National Coordinators.\u201d Target : Country (Wikidata ID for country) Notes : - This SubClassOf should only be used for breeds reported from DAD-IS, i.e., representing a breed defined as existing in a country. This concept will rarely exists outside of DAD-IS. - VBO terms with this SubClassOf axiom should have the following rdfs:comment, \"The concept of \u201cbreed reported in geographic location by FAO National Coordinators\u201d is unique to DAD-IS [https://www.fao.org/dad-is/en/] (https://www.fao.org/dad-is/en/). This VBO term should therefore be used specifically for the breed conforming to this concept.\"","title":"\u201cbreed reported in geographic location\u201d axiom"},{"location":"ontologymodeling/classification/","text":"VBO Classification High-level classification VBO breed terms are classified under the general term \u2018Vertebrate breed\u2019 (VBO:0400000) and grouped, for example, based on specific animal species (e.g., \u2018Horse breed\u2019) or animals of the same genus (\u2018Cattle breed\u2019) based on community and expert usage and jargon. VBO high-level classification: VBO is integrated within the NCBITaxon hierarchy. Breeds are identified as distinctive entities within a family, genus, species or subspecies. Therefore, in the ontology, breeds are subclasses of family/genus/species represented by NCBITaxon entities. Based on the broad definition of vertebrate breed, \u201ca taxonomic entity representing a population of vertebrate animals that share specific characteristics (such as traits, behavior, genetics) and/or for which cultural or geographical separation has led to the general acceptance of its separate identity,\u201d breeds were created as subclasses of family/genus/species/subspecies, which are represented by the NCBITaxon entities. Hence VBO terms are integrated within the NCBITaxon hierarchy using the is_a relation. One of the advantages is that VBO terms can be autoclassified based on the NCBITaxon hierarchy. Example: \u2018Cattle breed\u2019 (VBO:0400020) is defined as: \u2018Vertebrate breed\u2019 and Bos (NCBITaxon:9903). Bos indicus (zebu cattle, NCBITaxon:9915), Bos taurus (cattle, NCBITaxon:9913), Bos indicus \u00d7 Bos taurus (hybrid cattle, NCBITaxon:30522), and Bos grunniens (yak, NCBITaxon:30521), are all autoclassified as \u2018Cattle breed\u2019 via the NCBITaxon hierarchy. Sub-breeds, strains, variety, etc Distinguishable sub-breeds, strains, or varieties are also included in VBO and are related to the ontological parent breed using an is_a relation. For example, 'Chihuahua, Long-Haired (Dog)' (VBO:0200339) and 'Chihuahua, Smooth-Haired (Dog)' (VBO:0200340) are subclasses of 'Chihuahua (Dog)' (VBO:0200338). DAD-IS Breeds reported in a specific country Breeds defined as having been reported in a specific country by National Coordinators in DAD-IS are either - direct subclasses of their corresponding NCBITaxon (see cattle breeds above: 'Guraghe, Ethiopia (Cattle)', subclass of Bos indicus ) - subclasses of other breeds (see cattle breeds above: 'Aberdeen Angus, Brazil (Cattle)', subclass of 'Aberdeen-Angus (Cattle)')","title":"VBO Classification"},{"location":"ontologymodeling/classification/#vbo-classification","text":"","title":"VBO Classification"},{"location":"ontologymodeling/classification/#high-level-classification","text":"VBO breed terms are classified under the general term \u2018Vertebrate breed\u2019 (VBO:0400000) and grouped, for example, based on specific animal species (e.g., \u2018Horse breed\u2019) or animals of the same genus (\u2018Cattle breed\u2019) based on community and expert usage and jargon. VBO high-level classification:","title":"High-level classification"},{"location":"ontologymodeling/classification/#vbo-is-integrated-within-the-ncbitaxon-hierarchy","text":"Breeds are identified as distinctive entities within a family, genus, species or subspecies. Therefore, in the ontology, breeds are subclasses of family/genus/species represented by NCBITaxon entities. Based on the broad definition of vertebrate breed, \u201ca taxonomic entity representing a population of vertebrate animals that share specific characteristics (such as traits, behavior, genetics) and/or for which cultural or geographical separation has led to the general acceptance of its separate identity,\u201d breeds were created as subclasses of family/genus/species/subspecies, which are represented by the NCBITaxon entities. Hence VBO terms are integrated within the NCBITaxon hierarchy using the is_a relation. One of the advantages is that VBO terms can be autoclassified based on the NCBITaxon hierarchy. Example: \u2018Cattle breed\u2019 (VBO:0400020) is defined as: \u2018Vertebrate breed\u2019 and Bos (NCBITaxon:9903). Bos indicus (zebu cattle, NCBITaxon:9915), Bos taurus (cattle, NCBITaxon:9913), Bos indicus \u00d7 Bos taurus (hybrid cattle, NCBITaxon:30522), and Bos grunniens (yak, NCBITaxon:30521), are all autoclassified as \u2018Cattle breed\u2019 via the NCBITaxon hierarchy.","title":"VBO is integrated within the NCBITaxon hierarchy."},{"location":"ontologymodeling/classification/#sub-breeds-strains-variety-etc","text":"Distinguishable sub-breeds, strains, or varieties are also included in VBO and are related to the ontological parent breed using an is_a relation. For example, 'Chihuahua, Long-Haired (Dog)' (VBO:0200339) and 'Chihuahua, Smooth-Haired (Dog)' (VBO:0200340) are subclasses of 'Chihuahua (Dog)' (VBO:0200338).","title":"Sub-breeds, strains, variety, etc"},{"location":"ontologymodeling/classification/#dad-is-breeds-reported-in-a-specific-country","text":"Breeds defined as having been reported in a specific country by National Coordinators in DAD-IS are either - direct subclasses of their corresponding NCBITaxon (see cattle breeds above: 'Guraghe, Ethiopia (Cattle)', subclass of Bos indicus ) - subclasses of other breeds (see cattle breeds above: 'Aberdeen Angus, Brazil (Cattle)', subclass of 'Aberdeen-Angus (Cattle)')","title":"DAD-IS Breeds reported in a specific country"},{"location":"ontologymodeling/merge-obsolete/","text":"When to merge and/or obsolete VBO terms Documentation upcoming","title":"Term merge and obsolete"},{"location":"ontologymodeling/merge-obsolete/#when-to-merge-andor-obsolete-vbo-terms","text":"Documentation upcoming","title":"When to merge and/or obsolete VBO terms"},{"location":"ontologymodeling/metadata/","text":"VBO term Metadata VBO terms have rich metadata, all associated with provenance. Metadata Annotation ID Description VBO ID http://www.geneontology.org/formats/oboInOwl#id The unique and permanent identifier of a VBO concept, using the VBO prefix (VBO). required VBO Term Label http://www.w3.org/2000/01/rdf-schema#label Single, unique label. required Exact synonym http://www.geneontology.org/formats/oboInOwl#hasExactSynonym Name by which a VBO term can be referred to. required for, \u201cmost common name\u201d exact synonym, other exact synonyms are optional Most common name http://purl.obolibrary.org/obo/vbo#most_common_name Synonym type, indicates the name by which a breed is most commonly referred to. required Database cross reference http://www.geneontology.org/formats/oboInOwl#hasDbXref Identifier referring to the same VBO concept in another ontology, database, or the source. optional Source http://www.geneontology.org/formats/oboInOwl#source Added to an annotation, indicates the annotation provenance. When used as an annotation to the term, \u201csource\u201d represents the provenance of any information about the VBO term. required Contributor dcterms:contributor ORCID of curators and experts who contributed to the creation/revision of a VBO term. required Breed code http://purl.obolibrary.org/obo/vbo#breed_code Codes used by some communities, international organizations, and/or registration bodies to refer to the VBO term. optional Breed recognition status http://purl.obolibrary.org/obo/vbo#breed_recognition_status Refers to the level of recognition by a registration body; may be \u2018officially recognized\u2019, \u2018in the process of becoming officially recognized\u2019, or \u2018not been recognized\u2019. optional Domestication status http://purl.obolibrary.org/obo/vbo#hasdomesticationstatus Refers to the breed as domestic, feral or wild. optional Extinction status http://purl.obolibrary.org/obo/VBO_0300009 Breed status referring to the risk of extinction of a breed. optional Description of origin http://purl.obolibrary.org/obo/vbo#origindescription Free text note that may include the geographical origin and foundation stock of a breed. optional Comment rdfs:comment Information on specific terms and term usage. optional In subset - transboundary http://www.geneontology.org/formats/oboInOwl#inSubset Indicate that the term is reported as a \u201ctransboundary breed\u201d in DAD-IS optional DAD-IS only Term tracker http://purl.obolibrary.org/obo/IAO_0000233 Link to relevant GitHub issue(s) that include discussion and decision on the VBO term. optional VBO ID Unique and permanent identifiers IRI format: http://purl.obolibrary.org/obo/VBO_####### (7-digit) OBO ID format: VBO:####### (7-digit) Example: VBO:0200406 has the unique ID: http://purl.obolibrary.org/obo/VBO_0200406 More information on term ID ranges is provided here [link to VBO developer documentation]. VBO Term Label Term labels are unique and follow the format: - 'Most common name (Species)\u2019 in which Species is the English name (e.g. 'Chihuahua (Dog)' (VBO:0200338)). - 'Most common name, Country; (Species)' in which Country and Species are the English names. (e.g., \u2018Jersey Giant, Canada (Chicken)\u2019 (VBO:0006068)). This format is used for breeds defined by their country of existence as reported by FAO National Coordinators in DAD-IS. See more explanation in the term labels and naming conventions section. Exact synonym Any name that is provided by breed sources that represents the same concept as the VBO term is added as an exact synonym. Example: \u201cTeckel\u201d is an exact synonym for 'Dachshund (Dog)' (VBO:0200406) Notes: - Source(s) for the exact synonym is(are) required. - \u201cExact synonyms\u201d are optional, except for the one representing the \u2018most common name\u2019 of the breed (see below) which is required. Most Common name 'Most common name' is a \u2018synonym_type\u2019 annotation property that is added to an \u2018exact synonym\u2019 to indicate that the name is the one most commonly used across sources when refering to the VBO term. Example, \u2018Dachshund\u2019 is the \u2018most common name\u2019 for VBO:0200406 Database cross-reference A database cross-reference is an identifier in another ontology, database, or the source that refers to the same concept. Database cross-reference is in the CURIE format Example: \u2018Angus (Cattle)\u2019 (VBO:0000104) has database_cross_reference LBO:0000017. The \u201csource\u201d annotation for the database cross reference is the provenance for this mapping between VBO and the other source. Currently, the provenance is the ORCID of the contributor [link to contributor section] who manually curated this mapping. Source VBO was created based on information available in breed communities, international breed organizations, literature, and personal communication with experts. We keep the provenance of all this information in the \u201csource\u201d annotation. This \u201csource\u201d annotation property can be used to annotate metadata and SubClass axioms. When used as an annotation to the term, \u201csource\u201d represents the provenance of any information about the VBO term. \"Source\" can refer to - a specific record in a database or other ontology - e.g. 'Abyssinian (Horse)' (VBO:0017087) has source LBO:0000714 - a publication - e.g. 'Spanish Jennet (Horse)' (VBO:0016895) has source ISBN:9781403966216 - an international breed organization - e.g. 'Schnauzer, Standard (Dog)' (VBO:0201189) has source https://www.akc.org/dog-breeds/standard-schnauzer/ - individual experts - e.g. 'G\u00f6ttingen minipig (Pig)' (VBO:0016899) has source for exact synonym \u2018Goettingen miniature pig\u2019 https://orcid.org/0000-0002-5520-6597 Contributor Curators and experts who contributed to the creation of a VBO term are recorded by adding their ORCID, using the annotation property \u201cdcterms:contributor\u201d. Example: 'American Shorthair (Cat)' (VBO:0100018) has dcterms:contributor https://orcid.org/0000-0002-1628-7726 Breed code Some breed communities, international breed organizations, and/or registration bodies refer to breeds using codes. These codes are used on registration papers and for competition purposes. Breed codes are therefore of importance for some users. The same codes are often, though not always, reused between communities. We recorded breed code as annotations using the annotation property \u201cbreed code\u201d. Since codes are not always the same across communities, the source for the breed codes are recorded. Example: 'Abyssinian (Cat)' (VBO:0100000) is known by the breed code, \u2018AB\u2019 by TICA and \u2018ABY\u2019 by several other cat organizations, FIFe, WCF, GCCF and REFR. Breed recognition status We took an inclusive approach and created a VBO term when \u201cany\u201d sources described a group of animal as a breed. However, what is considered a \u201cbreed\u201d can vary between these sources, and this breed recognition can be of importance to some communities. For example, only breeds officially recognized by registration bodies determine eligibility of an animal to compete in a championship. We recorded the breed recognition status in VBO as an annotation, using the annotation property \u2018breed_recognition_status\u2019 , and a VBO \u2018recognition status\u2019 (VBO:0300001) term. These \u2018recognition status\u2019 terms could be: VBO terms Term labels Definitions VBO:0300002 fully recognized breed Breed recognition status referring to a breed recognized by an international registration body. This status also refers to breeds that are eligible to compete in championship classes. VBO:0300003 partially recognized breed Breed recognition status referring to a breed that is in the process of becoming fully recognized by an international registration body. This status is given to breeds which are preliminarily or provisionally recognized. VBO:0300004 not recognized breed Breed recognition status referring to a breed that is reported by an international registration body but not recognized. It should be noted that a same breed could have more than one \u2018breed recognition status\u2019 depending on the provenance of the information. All current available information is recorded in VBO , and provenance for this ingormation is recorded as a \u201csource\u201d annotation. This following example is a breed with multiple \u201cbreed recognition status\u201d: Domestication status The definition of Vertebrate Breed [REF] in VBO implies that a group of animals can be considered as a breed regardless of their domestication status. This domestication status can be of importance in some communities, for example in DAD-IS and the FAO, therefore, we recorded that information when available. We recorded the breed domestication status in VBO as an annotation, using the annotation property \u2018has_domestication_status\u2019. The domestication status can be one of the following terms: VBO terms Term labels Definitions VBO:0300006 feral breed Domestication status given to a group of animals that has been domesticated and has adapted to existence in the wild state but remains distinct from other wild individuals of the same species. VBO:0300007 domestic breed Domestication status given to a group of animals that has been domesticated, that is have been selectively bred and genetically adapted over generations to live alongside humans. VBO:0300008 wild breed Domestication status given to a group of animals that has not been domesticated and exists as free-living, self-sustaining and unmanaged population. As with all metadata, the source of information is recorded. Currently, the domestication status information solely comes from DAD-IS. Examples: Extinction status upcoming Description of origin Information about the breed origin, including information about the foundation stock used to create a breed, is often available in the form of free text notes. The free text note format is not ideal for querying information, but since this information is useful to some users, we recorded it, as reported by the sources (i.e. in free text note format), using the annotation property \u201cdescription of origin\u201d (http://purl.obolibrary.org/obo/vbo#origindescription). As for all other metadata, the source for the information is included. It should be noted that - ongoing work aims to review the \u2018description of origin\u2019 information and create \u2018has_foundation_stock\u2019 axioms to record this information in a more semantically useful format - some information beyond the description of origin is sometimes included. Comment Information on term concepts and usage are provided in the comment. Example: In subset - transboundary Users requested a way to identify VBO terms corresponding to DAD-IS transboundary breeds (read more about transboundary breeds and DAD-IS HERE). To support users of the DAD-IS data, we added a subset annotation to these VBO terms. The annotation uses the \u201cin subset\u201d (http://www.geneontology.org/formats/oboInOwl#inSubset) annotation property, with the \u201ctransboundary\u201d annotation. Example: Term tracker All ontology updates are tracked in our GitHub repository . When an update or edit on a VBO term is made in the context of a GitHub issue, a link to GitHub issue is added the VBO term. These links are useful to keep track of editing history (e.g. what changes were made) and for transparency (i.e. one can go back to a GitHub issue to gain context on the discussions and decisions that lead to the changes in the VBO term).","title":"VBO term Metadata"},{"location":"ontologymodeling/metadata/#vbo-term-metadata","text":"VBO terms have rich metadata, all associated with provenance. Metadata Annotation ID Description VBO ID http://www.geneontology.org/formats/oboInOwl#id The unique and permanent identifier of a VBO concept, using the VBO prefix (VBO). required VBO Term Label http://www.w3.org/2000/01/rdf-schema#label Single, unique label. required Exact synonym http://www.geneontology.org/formats/oboInOwl#hasExactSynonym Name by which a VBO term can be referred to. required for, \u201cmost common name\u201d exact synonym, other exact synonyms are optional Most common name http://purl.obolibrary.org/obo/vbo#most_common_name Synonym type, indicates the name by which a breed is most commonly referred to. required Database cross reference http://www.geneontology.org/formats/oboInOwl#hasDbXref Identifier referring to the same VBO concept in another ontology, database, or the source. optional Source http://www.geneontology.org/formats/oboInOwl#source Added to an annotation, indicates the annotation provenance. When used as an annotation to the term, \u201csource\u201d represents the provenance of any information about the VBO term. required Contributor dcterms:contributor ORCID of curators and experts who contributed to the creation/revision of a VBO term. required Breed code http://purl.obolibrary.org/obo/vbo#breed_code Codes used by some communities, international organizations, and/or registration bodies to refer to the VBO term. optional Breed recognition status http://purl.obolibrary.org/obo/vbo#breed_recognition_status Refers to the level of recognition by a registration body; may be \u2018officially recognized\u2019, \u2018in the process of becoming officially recognized\u2019, or \u2018not been recognized\u2019. optional Domestication status http://purl.obolibrary.org/obo/vbo#hasdomesticationstatus Refers to the breed as domestic, feral or wild. optional Extinction status http://purl.obolibrary.org/obo/VBO_0300009 Breed status referring to the risk of extinction of a breed. optional Description of origin http://purl.obolibrary.org/obo/vbo#origindescription Free text note that may include the geographical origin and foundation stock of a breed. optional Comment rdfs:comment Information on specific terms and term usage. optional In subset - transboundary http://www.geneontology.org/formats/oboInOwl#inSubset Indicate that the term is reported as a \u201ctransboundary breed\u201d in DAD-IS optional DAD-IS only Term tracker http://purl.obolibrary.org/obo/IAO_0000233 Link to relevant GitHub issue(s) that include discussion and decision on the VBO term. optional","title":"VBO term Metadata"},{"location":"ontologymodeling/metadata/#vbo-id","text":"Unique and permanent identifiers IRI format: http://purl.obolibrary.org/obo/VBO_####### (7-digit) OBO ID format: VBO:####### (7-digit) Example: VBO:0200406 has the unique ID: http://purl.obolibrary.org/obo/VBO_0200406 More information on term ID ranges is provided here [link to VBO developer documentation].","title":"VBO ID"},{"location":"ontologymodeling/metadata/#vbo-term-label","text":"Term labels are unique and follow the format: - 'Most common name (Species)\u2019 in which Species is the English name (e.g. 'Chihuahua (Dog)' (VBO:0200338)). - 'Most common name, Country; (Species)' in which Country and Species are the English names. (e.g., \u2018Jersey Giant, Canada (Chicken)\u2019 (VBO:0006068)). This format is used for breeds defined by their country of existence as reported by FAO National Coordinators in DAD-IS. See more explanation in the term labels and naming conventions section.","title":"VBO Term Label"},{"location":"ontologymodeling/metadata/#exact-synonym","text":"Any name that is provided by breed sources that represents the same concept as the VBO term is added as an exact synonym. Example: \u201cTeckel\u201d is an exact synonym for 'Dachshund (Dog)' (VBO:0200406) Notes: - Source(s) for the exact synonym is(are) required. - \u201cExact synonyms\u201d are optional, except for the one representing the \u2018most common name\u2019 of the breed (see below) which is required.","title":"Exact synonym"},{"location":"ontologymodeling/metadata/#most-common-name","text":"'Most common name' is a \u2018synonym_type\u2019 annotation property that is added to an \u2018exact synonym\u2019 to indicate that the name is the one most commonly used across sources when refering to the VBO term. Example, \u2018Dachshund\u2019 is the \u2018most common name\u2019 for VBO:0200406","title":"Most Common name"},{"location":"ontologymodeling/metadata/#database-cross-reference","text":"A database cross-reference is an identifier in another ontology, database, or the source that refers to the same concept. Database cross-reference is in the CURIE format Example: \u2018Angus (Cattle)\u2019 (VBO:0000104) has database_cross_reference LBO:0000017. The \u201csource\u201d annotation for the database cross reference is the provenance for this mapping between VBO and the other source. Currently, the provenance is the ORCID of the contributor [link to contributor section] who manually curated this mapping.","title":"Database cross-reference"},{"location":"ontologymodeling/metadata/#source","text":"VBO was created based on information available in breed communities, international breed organizations, literature, and personal communication with experts. We keep the provenance of all this information in the \u201csource\u201d annotation. This \u201csource\u201d annotation property can be used to annotate metadata and SubClass axioms. When used as an annotation to the term, \u201csource\u201d represents the provenance of any information about the VBO term. \"Source\" can refer to - a specific record in a database or other ontology - e.g. 'Abyssinian (Horse)' (VBO:0017087) has source LBO:0000714 - a publication - e.g. 'Spanish Jennet (Horse)' (VBO:0016895) has source ISBN:9781403966216 - an international breed organization - e.g. 'Schnauzer, Standard (Dog)' (VBO:0201189) has source https://www.akc.org/dog-breeds/standard-schnauzer/ - individual experts - e.g. 'G\u00f6ttingen minipig (Pig)' (VBO:0016899) has source for exact synonym \u2018Goettingen miniature pig\u2019 https://orcid.org/0000-0002-5520-6597","title":"Source"},{"location":"ontologymodeling/metadata/#contributor","text":"Curators and experts who contributed to the creation of a VBO term are recorded by adding their ORCID, using the annotation property \u201cdcterms:contributor\u201d. Example: 'American Shorthair (Cat)' (VBO:0100018) has dcterms:contributor https://orcid.org/0000-0002-1628-7726","title":"Contributor"},{"location":"ontologymodeling/metadata/#breed-code","text":"Some breed communities, international breed organizations, and/or registration bodies refer to breeds using codes. These codes are used on registration papers and for competition purposes. Breed codes are therefore of importance for some users. The same codes are often, though not always, reused between communities. We recorded breed code as annotations using the annotation property \u201cbreed code\u201d. Since codes are not always the same across communities, the source for the breed codes are recorded. Example: 'Abyssinian (Cat)' (VBO:0100000) is known by the breed code, \u2018AB\u2019 by TICA and \u2018ABY\u2019 by several other cat organizations, FIFe, WCF, GCCF and REFR.","title":"Breed code"},{"location":"ontologymodeling/metadata/#breed-recognition-status","text":"We took an inclusive approach and created a VBO term when \u201cany\u201d sources described a group of animal as a breed. However, what is considered a \u201cbreed\u201d can vary between these sources, and this breed recognition can be of importance to some communities. For example, only breeds officially recognized by registration bodies determine eligibility of an animal to compete in a championship. We recorded the breed recognition status in VBO as an annotation, using the annotation property \u2018breed_recognition_status\u2019 , and a VBO \u2018recognition status\u2019 (VBO:0300001) term. These \u2018recognition status\u2019 terms could be: VBO terms Term labels Definitions VBO:0300002 fully recognized breed Breed recognition status referring to a breed recognized by an international registration body. This status also refers to breeds that are eligible to compete in championship classes. VBO:0300003 partially recognized breed Breed recognition status referring to a breed that is in the process of becoming fully recognized by an international registration body. This status is given to breeds which are preliminarily or provisionally recognized. VBO:0300004 not recognized breed Breed recognition status referring to a breed that is reported by an international registration body but not recognized. It should be noted that a same breed could have more than one \u2018breed recognition status\u2019 depending on the provenance of the information. All current available information is recorded in VBO , and provenance for this ingormation is recorded as a \u201csource\u201d annotation. This following example is a breed with multiple \u201cbreed recognition status\u201d:","title":"Breed recognition status"},{"location":"ontologymodeling/metadata/#domestication-status","text":"The definition of Vertebrate Breed [REF] in VBO implies that a group of animals can be considered as a breed regardless of their domestication status. This domestication status can be of importance in some communities, for example in DAD-IS and the FAO, therefore, we recorded that information when available. We recorded the breed domestication status in VBO as an annotation, using the annotation property \u2018has_domestication_status\u2019. The domestication status can be one of the following terms: VBO terms Term labels Definitions VBO:0300006 feral breed Domestication status given to a group of animals that has been domesticated and has adapted to existence in the wild state but remains distinct from other wild individuals of the same species. VBO:0300007 domestic breed Domestication status given to a group of animals that has been domesticated, that is have been selectively bred and genetically adapted over generations to live alongside humans. VBO:0300008 wild breed Domestication status given to a group of animals that has not been domesticated and exists as free-living, self-sustaining and unmanaged population. As with all metadata, the source of information is recorded. Currently, the domestication status information solely comes from DAD-IS. Examples:","title":"Domestication status"},{"location":"ontologymodeling/metadata/#extinction-status","text":"upcoming","title":"Extinction status"},{"location":"ontologymodeling/metadata/#description-of-origin","text":"Information about the breed origin, including information about the foundation stock used to create a breed, is often available in the form of free text notes. The free text note format is not ideal for querying information, but since this information is useful to some users, we recorded it, as reported by the sources (i.e. in free text note format), using the annotation property \u201cdescription of origin\u201d (http://purl.obolibrary.org/obo/vbo#origindescription). As for all other metadata, the source for the information is included. It should be noted that - ongoing work aims to review the \u2018description of origin\u2019 information and create \u2018has_foundation_stock\u2019 axioms to record this information in a more semantically useful format - some information beyond the description of origin is sometimes included.","title":"Description of origin"},{"location":"ontologymodeling/metadata/#comment","text":"Information on term concepts and usage are provided in the comment. Example:","title":"Comment"},{"location":"ontologymodeling/metadata/#in-subset-transboundary","text":"Users requested a way to identify VBO terms corresponding to DAD-IS transboundary breeds (read more about transboundary breeds and DAD-IS HERE). To support users of the DAD-IS data, we added a subset annotation to these VBO terms. The annotation uses the \u201cin subset\u201d (http://www.geneontology.org/formats/oboInOwl#inSubset) annotation property, with the \u201ctransboundary\u201d annotation. Example:","title":"In subset - transboundary"},{"location":"ontologymodeling/metadata/#term-tracker","text":"All ontology updates are tracked in our GitHub repository . When an update or edit on a VBO term is made in the context of a GitHub issue, a link to GitHub issue is added the VBO term. These links are useful to keep track of editing history (e.g. what changes were made) and for transparency (i.e. one can go back to a GitHub issue to gain context on the discussions and decisions that lead to the changes in the VBO term).","title":"Term tracker"},{"location":"ontologymodeling/term-labels-naming-conventions/","text":"Term labels and Naming Conventions One can refer to the same breed by multiple names, including names in different languages (e.g. \u2018Artois Hound\u2019 and \u2018Chien d\u2019Artois\u2019 refer to the same breed). In addition, the same name is often used to refer to different breeds, of different species. For example, \u201cTibetan\u201d is the name for a breed of cattle, sheep, chicken, pig, goat, etc. Some breeds are also commonly called by names that can represent other types of entities. For example \u201cCyprus\u201d is used to refer to breeds of cattle, cat, etc., but also to the country \u201cCyprus\u201d. A VBO term label must be unique, i.e. multiple terms cannot have the same label, even if their names are the same. In this document, we explain how VBO term labels were created to ensure uniqueness and uniformity. To create unique VBO term labels, we concatenated the breed\u2019s most common name and their species, following the format: **'Most common name (Species)'** , in which most common name and species are the English language names (e.g. 'Cyprus (Cat)' VBO:0100081). The \u201cMost common name\u201d represents the breed name that is most often used to refer to the breed, as determined by the information found in the sources ( LINK to be added ). This \u2018most common name\u2019 is also recorded as an \u201cexact synonym\u201d [ LINK to be added ]. All breed names, including the one that are shared between breeds, are available as synonyms in VBO. For example, an exact synonym of Tibetan (Goat) VBO:0000845 is Tibetan. Including the \u2018Species\u2019 in the term label could be controversial. Breeds have a is_a relationship to a species, and therefore repeating the species name (i.e., ontological parentage) in the label is a break with standard ontology practices. While we recognize that this solution is not ideal, we were unable to ensure term label uniqueness without including the species name in the term label. As exemplified above, breeds from different species can share the same name, and some breeds can share identical name with other types of entities such as countries. The case of DAD-IS \u201cnational breed population\u201d and \u201clocal breeds\u201d. DAD-IS is maintained by National Coordinators for the Management of Animal Genetic Resources, and therefore their concept of breed is closely tight to the country where a breed has been reported (read more about DAD-IS here ). DAD-IS distinguishes between: - \u201cnational breed population\u201d which refers to the existence of a particular breed in a particular country. For example, a breed of chicken called \u201cAlatau\u201d reported to exist in Kyrgyzstan (VBO:0007427) - \u201clocal breed\u201d which refers to a country specific instance of a same breed that exists in each of several countries (itself called \u201ctransboundary\u201d breed). (see example below) As a consequence, it is very common to find breeds in DAD-IS with the same common name and from the same species. For example, \u201cJersey Giant\u201d is a breed of chicken that exists in Canada, Ireland, Luxembourg, etc., with each instance of this breed in an individual county being considered as an individual breed record to be represented in VBO. The naming convention reported above, based on \u201cmost common name\u201d and \u201cspecies\u201d is therefore not sufficient to ensure term label uniqueness for DAD-IS \u201cnational breed population\u201d and \u201clocal breed\u201d. The country where the breed has been reported by the National Coordinators had to be included to the VBO term label, following the format: **'Most common name\u2019, Country (Species)'** , in which country and species are the English names (e.g \u2018Jersey Giant, Canada (Chicken)\u2019 VBO:0006068). We recognize that adding the country of existence in the term name, in addition to the species, is not ideal and is unusual to ontology practices, but this concatenation of attributes was the only viable solution to ensure term uniqueness.","title":"Label and Naming Conventions"},{"location":"ontologymodeling/term-labels-naming-conventions/#term-labels-and-naming-conventions","text":"One can refer to the same breed by multiple names, including names in different languages (e.g. \u2018Artois Hound\u2019 and \u2018Chien d\u2019Artois\u2019 refer to the same breed). In addition, the same name is often used to refer to different breeds, of different species. For example, \u201cTibetan\u201d is the name for a breed of cattle, sheep, chicken, pig, goat, etc. Some breeds are also commonly called by names that can represent other types of entities. For example \u201cCyprus\u201d is used to refer to breeds of cattle, cat, etc., but also to the country \u201cCyprus\u201d. A VBO term label must be unique, i.e. multiple terms cannot have the same label, even if their names are the same. In this document, we explain how VBO term labels were created to ensure uniqueness and uniformity. To create unique VBO term labels, we concatenated the breed\u2019s most common name and their species, following the format: **'Most common name (Species)'** , in which most common name and species are the English language names (e.g. 'Cyprus (Cat)' VBO:0100081). The \u201cMost common name\u201d represents the breed name that is most often used to refer to the breed, as determined by the information found in the sources ( LINK to be added ). This \u2018most common name\u2019 is also recorded as an \u201cexact synonym\u201d [ LINK to be added ]. All breed names, including the one that are shared between breeds, are available as synonyms in VBO. For example, an exact synonym of Tibetan (Goat) VBO:0000845 is Tibetan. Including the \u2018Species\u2019 in the term label could be controversial. Breeds have a is_a relationship to a species, and therefore repeating the species name (i.e., ontological parentage) in the label is a break with standard ontology practices. While we recognize that this solution is not ideal, we were unable to ensure term label uniqueness without including the species name in the term label. As exemplified above, breeds from different species can share the same name, and some breeds can share identical name with other types of entities such as countries. The case of DAD-IS \u201cnational breed population\u201d and \u201clocal breeds\u201d. DAD-IS is maintained by National Coordinators for the Management of Animal Genetic Resources, and therefore their concept of breed is closely tight to the country where a breed has been reported (read more about DAD-IS here ). DAD-IS distinguishes between: - \u201cnational breed population\u201d which refers to the existence of a particular breed in a particular country. For example, a breed of chicken called \u201cAlatau\u201d reported to exist in Kyrgyzstan (VBO:0007427) - \u201clocal breed\u201d which refers to a country specific instance of a same breed that exists in each of several countries (itself called \u201ctransboundary\u201d breed). (see example below) As a consequence, it is very common to find breeds in DAD-IS with the same common name and from the same species. For example, \u201cJersey Giant\u201d is a breed of chicken that exists in Canada, Ireland, Luxembourg, etc., with each instance of this breed in an individual county being considered as an individual breed record to be represented in VBO. The naming convention reported above, based on \u201cmost common name\u201d and \u201cspecies\u201d is therefore not sufficient to ensure term label uniqueness for DAD-IS \u201cnational breed population\u201d and \u201clocal breed\u201d. The country where the breed has been reported by the National Coordinators had to be included to the VBO term label, following the format: **'Most common name\u2019, Country (Species)'** , in which country and species are the English names (e.g \u2018Jersey Giant, Canada (Chicken)\u2019 VBO:0006068). We recognize that adding the country of existence in the term name, in addition to the species, is not ideal and is unusual to ontology practices, but this concatenation of attributes was the only viable solution to ensure term uniqueness.","title":"Term labels and Naming Conventions"},{"location":"ontologymodeling/xref/","text":"VBO Database Cross-References Documentation upcoming","title":"Database Cross-References"},{"location":"ontologymodeling/xref/#vbo-database-cross-references","text":"Documentation upcoming","title":"VBO Database Cross-References"}]}